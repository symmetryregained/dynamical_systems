(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    155582,       3054]
NotebookOptionsPosition[    150119,       2959]
NotebookOutlinePosition[    150461,       2974]
CellTagsIndexPosition[    150418,       2971]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["The Lotka - Volterra system", "Title",
 CellChangeTimes->{{3.7963996537851562`*^9, 
  3.796399663001953*^9}},ExpressionUUID->"f930adf6-29b9-439e-8b92-\
399c2536b381"],

Cell[CellGroupData[{

Cell["Define the LV system", "Section",
 CellChangeTimes->{{3.7962691609726562`*^9, 
  3.7962691719033203`*^9}},ExpressionUUID->"980ce50a-b217-4994-b28e-\
b39a635631d6"],

Cell["\<\
First we define the symbols for functions of time and parameters used in the \
model. We will make all definitions valid for arbitrary dimension.\
\>", "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398312745117*^9, 
  3.7963983756933594`*^9}, {3.7963988839384766`*^9, 3.796398927055664*^9}, {
  3.7963996741171875`*^9, 3.7963997026835938`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"1817ad05-a803-4a37-bf19-b9e483be6442"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "2"}], ";", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{"dimensionality", " ", "of", " ", "the", " ", "system"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.796270602680664*^9, 3.7962706046064453`*^9}, 
   3.796280151180664*^9, 3.7962802152783203`*^9, {3.7963986543554688`*^9, 
   3.796398684616211*^9}},ExpressionUUID->"9c1d9702-6aa2-4b44-bfd2-\
174bbc270101"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"coordSymb", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "n", "]"}]}]}], ";"}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{"generates", " ", "coordinate", " ", "symbols"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"coord", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "coordSymb", "\[LeftDoubleBracket]", "#", "\[RightDoubleBracket]"}], 
       "[", "t", "]"}], "&"}], "/@", 
     RowBox[{"Range", "[", "n", "]"}]}]}], ";"}], "              ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "coordinate", " ", "functions", " ", "of", " ", "time"}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parametersS", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Subscript", "[", 
       RowBox[{"r", ",", 
        RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], 
  "               ", 
  RowBox[{"(*", " ", 
   RowBox[{"generates", " ", "scaling", " ", "parameters", " ", "symbols"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"parametersA", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "==", "j"}], ",", "0", ",", 
        RowBox[{"Subscript", "[", 
         RowBox[{"a", ",", 
          RowBox[{
           RowBox[{"ToString", "[", "i", "]"}], "<>", 
           RowBox[{"ToString", "[", "j", "]"}]}]}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";"}], "       ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "generates", " ", "interaction", " ", "parameters", " ", "symbols"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"allParameters", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Prepend", "[", 
       RowBox[{"parametersA", ",", "parametersS"}], "]"}], "]"}], ",", "0"}], 
    "]"}]}], ";", "         ", 
  RowBox[{"(*", " ", 
   RowBox[{"the", " ", "list", " ", "of", " ", "all", " ", "parameters"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.796277533748047*^9, 3.7962775439033203`*^9}, {
  3.7962802226953125`*^9, 3.796280233607422*^9}, {3.796280391963867*^9, 
  3.7962803923652344`*^9}, {3.7963932925898438`*^9, 3.7963933150429688`*^9}, {
  3.796398690913086*^9, 3.7963987453652344`*^9}, {3.7963987981210938`*^9, 
  3.796398873708008*^9}},ExpressionUUID->"65e79aea-5f61-4276-a561-\
ffa6f4e23486"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Species are designated by = \>\"", ",", " ", "coordSymb", ",", " ", 
   "\"\< and by \>\"", ",", " ", "coord", ",", " ", 
   "\"\< as functions of time.\>\""}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Scaling parameters = \>\"", ",", " ", "parametersS"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<Interaction matrix without self-interaction = \>\"", ",", " ", 
   "parametersA"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<All parameters = \>\"", ",", " ", "allParameters"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.79627037359375*^9, 3.79627038753125*^9}, {
   3.7962704344501953`*^9, 3.796270615673828*^9}, {3.7962706560634766`*^9, 
   3.7962707700058594`*^9}, 3.796271037140625*^9, {3.7962761480439453`*^9, 
   3.796276183290039*^9}, {3.7962762654335938`*^9, 3.7962763510478516`*^9}, {
   3.7962763857851562`*^9, 3.796276392921875*^9}, {3.7962765816992188`*^9, 
   3.7962765829091797`*^9}, {3.7962766318583984`*^9, 3.796276671560547*^9}, {
   3.7962769656064453`*^9, 3.7962769768720703`*^9}, {3.7962770210214844`*^9, 
   3.7962770908710938`*^9}, {3.796277124466797*^9, 3.79627713771875*^9}, {
   3.7962802613740234`*^9, 3.7962804803115234`*^9}, 3.796393336506836*^9, 
   3.7963933670117188`*^9},
 CellLabel->
  "In[138]:=",ExpressionUUID->"7b074f97-a834-47c8-8608-caa36654f0be"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Species are designated by = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["x", "2"]}], "}"}], "\[InvisibleSpace]", "\<\" and by \"\>",
    "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox["x", "1"], "[", "t", "]"}], ",", 
     RowBox[{
      SubscriptBox["x", "2"], "[", "t", "]"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\" as functions of time.\"\>"}],
  SequenceForm["Species are designated by = ", {
    Subscript[$CellContext`x, 1], 
    Subscript[$CellContext`x, 2]}, " and by ", {
    Subscript[$CellContext`x, 1][$CellContext`t], 
    Subscript[$CellContext`x, 2][$CellContext`t]}, " as functions of time."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7962803792626953`*^9, 3.7962804328134766`*^9, {3.7962804772802734`*^9, 
   3.7962804819970703`*^9}, 3.7962808064628906`*^9, 3.7963737067109375`*^9, 
   3.796393460708008*^9, 3.796397451908203*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"8b77b5ab-f13f-406e-babf-914db79e55ac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Scaling parameters = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["r", "\<\"1\"\>"], ",", 
     SubscriptBox["r", "\<\"2\"\>"]}], "}"}]}],
  SequenceForm["Scaling parameters = ", {
    Subscript[$CellContext`r, "1"], 
    Subscript[$CellContext`r, "2"]}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7962803792626953`*^9, 3.7962804328134766`*^9, {3.7962804772802734`*^9, 
   3.7962804819970703`*^9}, 3.7962808064628906`*^9, 3.7963737067109375`*^9, 
   3.796393460708008*^9, 3.7963974519121094`*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"fac22275-ddc3-49af-a483-30f86da0e7b2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Interaction matrix without self-interaction = \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SubscriptBox["a", "\<\"12\"\>"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["a", "\<\"21\"\>"], ",", "0"}], "}"}]}], "}"}]}],
  SequenceForm["Interaction matrix without self-interaction = ", {{0, 
     Subscript[$CellContext`a, "12"]}, {
     Subscript[$CellContext`a, "21"], 0}}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7962803792626953`*^9, 3.7962804328134766`*^9, {3.7962804772802734`*^9, 
   3.7962804819970703`*^9}, 3.7962808064628906`*^9, 3.7963737067109375`*^9, 
   3.796393460708008*^9, 3.796397451919922*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"beee4daa-467d-4874-8123-397b390b64f9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"All parameters = \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["r", "\<\"1\"\>"], ",", 
     SubscriptBox["r", "\<\"2\"\>"], ",", 
     SubscriptBox["a", "\<\"12\"\>"], ",", 
     SubscriptBox["a", "\<\"21\"\>"]}], "}"}]}],
  SequenceForm["All parameters = ", {
    Subscript[$CellContext`r, "1"], 
    Subscript[$CellContext`r, "2"], 
    Subscript[$CellContext`a, "12"], 
    Subscript[$CellContext`a, "21"]}],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7962803792626953`*^9, 3.7962804328134766`*^9, {3.7962804772802734`*^9, 
   3.7962804819970703`*^9}, 3.7962808064628906`*^9, 3.7963737067109375`*^9, 
   3.796393460708008*^9, 3.7963974519228516`*^9},
 CellLabel->
  "During evaluation of \
In[138]:=",ExpressionUUID->"5b56bef9-9115-43ce-984b-d54ff3c03a87"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Define the vector field corresponding to the system of differential equations\
\>", "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398312745117*^9, 
  3.7963983756933594`*^9}, {3.7963988839384766`*^9, 3.796398975428711*^9}, {
  3.7963990476396484`*^9, 3.7963990576953125`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"6857f29d-6513-4185-ad7f-37f646dde009"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fVector", "=", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "coord", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       RowBox[{
       "parametersS", "\[LeftDoubleBracket]", "i", 
        "\[RightDoubleBracket]"}]}], "+", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "coord", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
         RowBox[{"parametersA", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "j"}], "\[RightDoubleBracket]"}], 
         RowBox[{
         "coord", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LVSystem", "=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"coord", ",", "t"}], "]"}], "\[Equal]", "fVector"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<The vector field in the species space = \>\"", ",", " ", 
   RowBox[{"MatrixForm", "[", "fVector", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<And the equations of the dynamical system = \>\"", ",", " ", 
   RowBox[{"MatrixForm", "[", "LVSystem", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7962707937822266`*^9, 3.7962709232851562`*^9}, {
   3.7962710108876953`*^9, 3.7962710733632812`*^9}, {3.79627120384375*^9, 
   3.79627120440625*^9}, 3.7962713031220703`*^9, {3.7962713647773438`*^9, 
   3.7962713963085938`*^9}, {3.7962715501689453`*^9, 
   3.7962715512753906`*^9}, {3.7962716228876953`*^9, 
   3.7962716241308594`*^9}, {3.7962730717304688`*^9, 3.796273072807617*^9}, {
   3.796274683573242*^9, 3.7962747095595703`*^9}, 3.7962751292626953`*^9, 
   3.7962751903720703`*^9, {3.7962753282939453`*^9, 3.7962753558339844`*^9}, {
   3.796275695725586*^9, 3.7962757292939453`*^9}, {3.7962757923720703`*^9, 
   3.7962757973242188`*^9}, 3.796275854366211*^9, {3.796276110727539*^9, 
   3.7962761118945312`*^9}, {3.796277172701172*^9, 3.796277205310547*^9}, {
   3.7962772386484375`*^9, 3.796277262267578*^9}, 3.7962802613740234`*^9, {
   3.796280498973633*^9, 3.796280523104492*^9}, {3.7962805593496094`*^9, 
   3.796280641451172*^9}, {3.796280721932617*^9, 3.7962807244814453`*^9}, {
   3.796280786248047*^9, 3.796280787966797*^9}, {3.7963934140117188`*^9, 
   3.796393423578125*^9}, {3.7963957885185547`*^9, 3.796395796076172*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"a0a3e19d-318d-4d8e-abcd-e4de22819822"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "1"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["r", "\<\"1\"\>"], " ", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
     RowBox[{
      SubscriptBox["a", "\<\"12\"\>"], " ", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["x", "2"], "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      SubscriptBox["r", "\<\"2\"\>"], " ", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
     RowBox[{
      SubscriptBox["a", "\<\"21\"\>"], " ", 
      RowBox[{
       SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
      RowBox[{
       SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.796280641748047*^9, 3.796280686241211*^9, 3.7962807250908203`*^9, {
   3.7962807888867188`*^9, 3.796280810786133*^9}, 3.796373706760742*^9, 
   3.796393460788086*^9, 3.7963974519365234`*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"a217fe26-8fdb-4316-a9c3-90cb38147c20"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"The vector field in the species space = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{
           SubscriptBox["r", "\<\"1\"\>"], " ", 
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["a", "\<\"12\"\>"], " ", 
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}]}]}]},
        {
         RowBox[{
          RowBox[{
           SubscriptBox["r", "\<\"2\"\>"], " ", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
          RowBox[{
           SubscriptBox["a", "\<\"21\"\>"], " ", 
           RowBox[{
            SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
           RowBox[{
            SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["The vector field in the species space = ", 
   MatrixForm[{
    Subscript[$CellContext`r, "1"] 
      Subscript[$CellContext`x, 1][$CellContext`t] + 
     Subscript[$CellContext`a, "12"] 
      Subscript[$CellContext`x, 1][$CellContext`t] 
      Subscript[$CellContext`x, 2][$CellContext`t], 
     Subscript[$CellContext`r, "2"] 
      Subscript[$CellContext`x, 2][$CellContext`t] + 
     Subscript[$CellContext`a, "21"] 
      Subscript[$CellContext`x, 1][$CellContext`t] 
      Subscript[$CellContext`x, 2][$CellContext`t]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7962805268564453`*^9, 3.796280564723633*^9, {3.796280626435547*^9, 
   3.796280641763672*^9}, 3.796280686256836*^9, 3.7962807251064453`*^9, {
   3.796280788897461*^9, 3.796280810801758*^9}, 3.796373706776367*^9, 
   3.796393460794922*^9, 3.796397451942383*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"abb00c2b-5a05-4f42-b76a-6897f4e247ff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"And the equations of the dynamical system = \"\>", 
   "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "1"], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            SubscriptBox["r", "\<\"1\"\>"], " ", 
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["a", "\<\"12\"\>"], " ", 
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}]},
        {
         RowBox[{
          RowBox[{
           SuperscriptBox[
            SubscriptBox["x", "2"], "\[Prime]",
            MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
          RowBox[{
           RowBox[{
            SubscriptBox["r", "\<\"2\"\>"], " ", 
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}]}], "+", 
           RowBox[{
            SubscriptBox["a", "\<\"21\"\>"], " ", 
            RowBox[{
             SubscriptBox["x", "1"], "[", "t", "]"}], " ", 
            RowBox[{
             SubscriptBox["x", "2"], "[", "t", "]"}]}]}]}]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
         "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["And the equations of the dynamical system = ", 
   MatrixForm[{Derivative[1][
       Subscript[$CellContext`x, 1]][$CellContext`t] == 
     Subscript[$CellContext`r, "1"] 
       Subscript[$CellContext`x, 1][$CellContext`t] + 
      Subscript[$CellContext`a, "12"] 
       Subscript[$CellContext`x, 1][$CellContext`t] 
       Subscript[$CellContext`x, 2][$CellContext`t], Derivative[1][
       Subscript[$CellContext`x, 2]][$CellContext`t] == 
     Subscript[$CellContext`r, "2"] 
       Subscript[$CellContext`x, 2][$CellContext`t] + 
      Subscript[$CellContext`a, "21"] 
       Subscript[$CellContext`x, 1][$CellContext`t] 
       Subscript[$CellContext`x, 2][$CellContext`t]}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7962805268564453`*^9, 3.796280564723633*^9, {3.796280626435547*^9, 
   3.796280641763672*^9}, 3.796280686256836*^9, 3.7962807251064453`*^9, {
   3.796280788897461*^9, 3.796280810801758*^9}, 3.796373706776367*^9, 
   3.796393460794922*^9, 3.796397451948242*^9},
 CellLabel->
  "During evaluation of \
In[142]:=",ExpressionUUID->"81c2a9c0-d4dd-474e-832d-63e028eda030"]
}, Open  ]]
}, Open  ]],

Cell[TextData[StyleBox["stable points - ADD LATER",
 FontWeight->"Bold"]], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398312745117*^9, 
  3.7963983756933594`*^9}, {3.7963988839384766`*^9, 3.796398975428711*^9}, {
  3.7963990476396484`*^9, 3.7963990576953125`*^9}, {3.796399391376953*^9, 
  3.7963993993359375`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"c579ede9-85ae-4c15-b4a4-0f950aeceb17"]
}, Closed]],

Cell[CellGroupData[{

Cell["Define the numerical solver and plotter", "Section",
 CellChangeTimes->{{3.7962691609726562`*^9, 3.7962691719033203`*^9}, {
  3.7962700048427734`*^9, 3.7962700079697266`*^9}, {3.7962700611083984`*^9, 
  3.7962700665742188`*^9}},ExpressionUUID->"e4ec4a0c-3e51-4b1b-8e33-\
e36d6ec1d66b"],

Cell[TextData[{
 "It is useful to define a function that gives the ",
 StyleBox["Rule", "Code"],
 " for implementing the chosen parameters into any expression"
}], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398312745117*^9, 
  3.7963983756933594`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"eeb506a5-c93a-4287-850a-dac0617d0360"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ChooseParameters", "[", "modelParameters_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", "allParameters", "]"}], "\[Rule]", 
    RowBox[{"Flatten", "[", "modelParameters", "]"}]}], "]"}], "    ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "use", " ", "this", " ", "to", " ", "give", " ", "values", " ", "to", " ", 
    "the", " ", "parameters"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.7962593621757812`*^9, 3.796259438734375*^9}, {
   3.796269079413086*^9, 3.7962690957539062`*^9}, {3.796273030379883*^9, 
   3.7962730409023438`*^9}, {3.7962736750410156`*^9, 3.7962736788125*^9}, 
   3.796277366451172*^9, {3.7962774463408203`*^9, 3.7962774481835938`*^9}, {
   3.7962808314677734`*^9, 3.7962808518251953`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"c11939d8-d202-469e-b464-029a31b6259d"],

Cell["\<\
The following function numerically solves the system of equations, provided \
the system, initial conditions, parameters and the duration of simulation \
\>", "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398312745117*^9, 
  3.7963983756933594`*^9}, {3.7963984163945312`*^9, 3.7963984927177734`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"244099d1-c505-4eff-b086-6492e67a5d29"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"LVSolution", "[", 
    RowBox[{
    "coord_", ",", "system_", ",", "modelParameters_", ",", "initcond_", ",", 
     "tEnd_"}], "]"}], ":=", 
   RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"system", ",", "initcond"}], "]"}], "/.", 
      RowBox[{"ChooseParameters", "[", "modelParameters", "]"}]}], ",", 
     "\[IndentingNewLine]", "coord", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "tEnd"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.796259953817383*^9, 3.7962599797666016`*^9}, {
   3.7962600219335938`*^9, 3.7962600681572266`*^9}, {3.796260101357422*^9, 
   3.7962601064208984`*^9}, {3.796260226341797*^9, 3.7962602993476562`*^9}, {
   3.7962636214765625`*^9, 3.7962636247177734`*^9}, {3.7962641359746094`*^9, 
   3.7962641390302734`*^9}, 3.7962645577021484`*^9, {3.796265073482422*^9, 
   3.7962650753125*^9}, 3.7962660698085938`*^9, {3.7962689231875*^9, 
   3.7962689527646484`*^9}, {3.7962692315566406`*^9, 
   3.7962692322666016`*^9}, {3.796269275671875*^9, 3.7962693128964844`*^9}, {
   3.796270080107422*^9, 3.796270086013672*^9}, {3.7962732650283203`*^9, 
   3.7962732935117188`*^9}, {3.7962734373115234`*^9, 
   3.7962734427939453`*^9}, {3.7962774416064453`*^9, 
   3.7962774424345703`*^9}, {3.7963934328085938`*^9, 3.796393437576172*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"a4812ccf-e1d6-49f0-837a-4a65adaa736f"],

Cell[TextData[{
 "The following are the function for plotting the solution, and a helping \
function that displays the parameters in the text form, used in options of ",
 StyleBox["Plot", "Code"],
 "."
}], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398312745117*^9, 
  3.7963983756933594`*^9}, {3.7963984163945312`*^9, 3.7963985865351562`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"4d304d5f-749a-4841-845a-ca691a1df695"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DisplayParameters", "[", 
   RowBox[{"allParameters_", ",", "modelParameters_"}], "]"}], ":=", 
  RowBox[{"TextString", "[", 
   RowBox[{"Row", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{
         "allParameters", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}], "//", "TraditionalForm"}], "]"}], "<>", 
       "\"\<=\>\"", "<>", 
       RowBox[{"ToString", "[", 
        RowBox[{
        "modelParameters", "\[LeftDoubleBracket]", "i", 
         "\[RightDoubleBracket]"}], "]"}], "<>", "\"\<  \>\""}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "allParameters", "]"}]}], "}"}]}], "]"}], 
    "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7963949269541016`*^9, 3.796395033040039*^9}, {
   3.7963950916445312`*^9, 3.7963951268564453`*^9}, 3.796396406453125*^9, {
   3.7963967304384766`*^9, 3.796396731333008*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"f3869116-f23a-4e82-b6d9-d8b133b50dbb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"plt", "[", 
   RowBox[{"params_", ",", "solution_", ",", "tend_", ",", "plottitle_"}], 
   "]"}], ":=", 
  RowBox[{"Plot", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"solution", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "/.", 
      "solution"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tend"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"(*", " ", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"tail", "<", "x", "<", 
         RowBox[{"tail", "+", "4"}]}]}], "]"}]}], " ", "*)"}], 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"ToString", "[", 
        RowBox[{
         RowBox[{"solution", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         "TraditionalForm"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"plottitle", "<>", 
      RowBox[{"DisplayParameters", "[", 
       RowBox[{"allParameters", ",", "params"}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7962622538242188`*^9, 3.796262277419922*^9}, {
   3.7962623352773438`*^9, 3.796262379495117*^9}, {3.7962626684335938`*^9, 
   3.7962626693398438`*^9}, {3.7962634543164062`*^9, 3.796263481338867*^9}, {
   3.796264110100586*^9, 3.7962641104179688`*^9}, 3.796264156760742*^9, 
   3.796264355245117*^9, 3.7962644737802734`*^9, 3.7962686113085938`*^9, 
   3.7962686543652344`*^9, {3.796268870267578*^9, 3.7962688892822266`*^9}, {
   3.796269026375*^9, 3.7962690409228516`*^9}, {3.796269415435547*^9, 
   3.796269506364258*^9}, {3.7962696830615234`*^9, 3.796269735419922*^9}, {
   3.7962700161376953`*^9, 3.7962700519189453`*^9}, {3.7962732443095703`*^9, 
   3.796273319086914*^9}, {3.7962734512529297`*^9, 3.796273458810547*^9}, {
   3.7962735964970703`*^9, 3.796273600633789*^9}, {3.796273632046875*^9, 
   3.796273634522461*^9}, {3.7962776533984375`*^9, 3.7962777308535156`*^9}, {
   3.796277818482422*^9, 3.7962778401679688`*^9}, {3.7962779048447266`*^9, 
   3.796277942102539*^9}, {3.7962780218779297`*^9, 3.796278051642578*^9}, {
   3.7962780948115234`*^9, 3.7962781019335938`*^9}, {3.7963966879541016`*^9, 
   3.79639669703125*^9}, {3.796396738317383*^9, 3.796396740196289*^9}, {
   3.7963972815546875`*^9, 3.796397287479492*^9}, {3.796397318901367*^9, 
   3.7963973383476562`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"d0976306-f6b0-463c-a4de-93dd81563ce1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Numerical and visual analysis of the Lotka-Volterra system", "Section",
 CellChangeTimes->{{3.7962691609726562`*^9, 3.7962691719033203`*^9}, {
  3.7962700048427734`*^9, 3.7962700079697266`*^9}, {3.7962700611083984`*^9, 
  3.7962700665742188`*^9}, {3.796399024385742*^9, 
  3.7963990388007812`*^9}},ExpressionUUID->"11379dc6-e985-4295-8b6a-\
015eab9cc145"],

Cell[CellGroupData[{

Cell["\<\
Numerically solve the system for a given choice of parameters and initial \
conditions \
\>", "Subsection",
 CellChangeTimes->{{3.7962691609726562`*^9, 3.79626919309375*^9}, {
  3.796280125536133*^9, 3.7962801348828125`*^9}, {3.7963991657998047`*^9, 
  3.7963991825341797`*^9}},ExpressionUUID->"299d6651-2aa7-450b-a6d2-\
d9478c3d60fb"],

Cell["\<\
Let us choose some values of parameters (they all need to be positive since \
we require this system to describe realistic predator-prey population \
dynamics) and choose the initial conditions; we can always come back here to \
change them in order to explore the model\
\>", "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.7963990789091797`*^9, 
  3.7963991085322266`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"1d9241df-44ef-425c-8054-a94910e09c89"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"modelParameters", "=", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", 
     RowBox[{"-", "3."}], ",", 
     RowBox[{"-", "1."}], ",", "1."}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialConditions", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"coord", "/.", 
       RowBox[{"t", "\[Rule]", "0"}]}], ")"}], "==", 
     RowBox[{"{", 
      RowBox[{"12", ",", "5"}], "}"}]}], "]"}]}], "     ", 
  RowBox[{"(*", " ", 
   RowBox[{"give", " ", "initial", " ", "conditions", " ", "here"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tend", "=", "30"}], ";"}], "      ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "time", " ", "period", " ", "over", " ", "which", " ", "to", " ", "run", 
    " ", "the", " ", "simulation"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ChooseParameters", "[", "modelParameters", "]"}]}], "Input",
 CellChangeTimes->{{3.7962600779960938`*^9, 3.7962601149335938`*^9}, {
   3.796260191935547*^9, 3.7962602226523438`*^9}, 3.796268384163086*^9, {
   3.7962689955322266`*^9, 3.7962689958916016`*^9}, {3.7962691996953125`*^9, 
   3.79626921028125*^9}, {3.796269318314453*^9, 3.796269348201172*^9}, {
   3.796269933435547*^9, 3.796269933529297*^9}, 3.7962699772734375`*^9, 
   3.7962700573896484`*^9, {3.7962701135117188`*^9, 3.7962701141523438`*^9}, {
   3.7962737218125*^9, 3.7962737222685547`*^9}, {3.7962738590664062`*^9, 
   3.7962738652509766`*^9}, {3.796273896442383*^9, 3.7962739530947266`*^9}, {
   3.7962740139658203`*^9, 3.7962740886835938`*^9}, {3.7962741519541016`*^9, 
   3.7962741788720703`*^9}, {3.7962743211660156`*^9, 
   3.7962743258251953`*^9}, {3.7962743663085938`*^9, 3.796274375208008*^9}, 
   3.796274457854492*^9, 3.7962745135195312`*^9, {3.796277426841797*^9, 
   3.796277434548828*^9}, {3.7962774720009766`*^9, 3.79627747684375*^9}, {
   3.7962781301240234`*^9, 3.79627813334375*^9}, {3.796278240671875*^9, 
   3.7962782494501953`*^9}, {3.7962801798710938`*^9, 
   3.7962801808251953`*^9}, {3.796280866638672*^9, 3.796280866763672*^9}, 
   3.7963934474941406`*^9, {3.796397875104492*^9, 3.796397906260742*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"442120c2-8a38-40e4-baa9-473eb9526887"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["x", "1"], "[", "0", "]"}], "\[Equal]", "12"}], ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["x", "2"], "[", "0", "]"}], "\[Equal]", "5"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7962745141123047`*^9, 3.7962773191367188`*^9, 3.796277374658203*^9, {
   3.7962774629677734`*^9, 3.7962774775947266`*^9}, {3.7962777165009766`*^9, 
   3.7962777338916016`*^9}, 3.7962779129658203`*^9, 3.796278029357422*^9, {
   3.796278112609375*^9, 3.79627813415625*^9}, 3.7962782501689453`*^9, 
   3.7962784207177734`*^9, 3.7962784841064453`*^9, {3.7962801723876953`*^9, 
   3.7962801821064453`*^9}, {3.7962808595634766`*^9, 3.7962808682285156`*^9}, 
   3.796373706838867*^9, 3.7963934608339844`*^9, 3.796397451998047*^9, 
   3.7963979072314453`*^9},
 CellLabel->
  "Out[167]=",ExpressionUUID->"791b98c6-e237-4a6b-9985-e92f39362973"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["r", "\<\"1\"\>"], "\[Rule]", "1.5`"}], ",", 
   RowBox[{
    SubscriptBox["r", "\<\"2\"\>"], "\[Rule]", 
    RowBox[{"-", "3.`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "\<\"12\"\>"], "\[Rule]", 
    RowBox[{"-", "1.`"}]}], ",", 
   RowBox[{
    SubscriptBox["a", "\<\"21\"\>"], "\[Rule]", "1.`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7962745141123047`*^9, 3.7962773191367188`*^9, 3.796277374658203*^9, {
   3.7962774629677734`*^9, 3.7962774775947266`*^9}, {3.7962777165009766`*^9, 
   3.7962777338916016`*^9}, 3.7962779129658203`*^9, 3.796278029357422*^9, {
   3.796278112609375*^9, 3.79627813415625*^9}, 3.7962782501689453`*^9, 
   3.7962784207177734`*^9, 3.7962784841064453`*^9, {3.7962801723876953`*^9, 
   3.7962801821064453`*^9}, {3.7962808595634766`*^9, 3.7962808682285156`*^9}, 
   3.796373706838867*^9, 3.7963934608339844`*^9, 3.796397451998047*^9, 
   3.7963979072373047`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"43c9134b-1c69-41ff-875f-21d48e2c2b74"]
}, Open  ]],

Cell[TextData[{
 "Numerically solve the system using previously defined function ",
 StyleBox["LVSolution", "Code"]
}], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398031196289*^9, 
  3.7963980474033203`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"f98ba2b8-1078-4145-83a2-162d89ca1697"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"LVSolution", "[", 
    RowBox[{
    "coord", ",", "LVSystem", ",", "modelParameters", ",", 
     "initialConditions", ",", "tend"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7962697682353516`*^9, 3.796269773921875*^9}, {
   3.7962698244785156`*^9, 3.7962698253720703`*^9}, {3.7962737437783203`*^9, 
   3.7962738052753906`*^9}, 3.7962774376376953`*^9, {3.7962775705322266`*^9, 
   3.7962775805439453`*^9}, {3.796278119298828*^9, 3.796278119830078*^9}, 
   3.7962808754990234`*^9, 3.7963934474990234`*^9},
 CellLabel->
  "In[154]:=",ExpressionUUID->"9375ef63-98a0-42e8-9826-a713a58abccf"],

Cell["Plot the time evolution of the two populations", "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963978186347656`*^9}, {
  3.7963979155*^9, 3.796397981135742*^9}, {3.796398031196289*^9, 
  3.7963980762333984`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"11307dae-7def-435b-a7f7-3a0d5c4b7da8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"plt", "[", 
     RowBox[{
     "modelParameters", ",", "sol", ",", "tend", ",", 
      "\"\<Lotka-Volterra system with parameters: \\n\>\""}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "25"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "15"}], "}"}]}], "}"}]}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7962605408242188`*^9, 3.79626054178125*^9}, {
   3.796260647498047*^9, 3.796260722004883*^9}, {3.7962607526396484`*^9, 
   3.7962608225927734`*^9}, 3.796262205875*^9, {3.796262387908203*^9, 
   3.796262462013672*^9}, 3.796262531463867*^9, {3.796264054125*^9, 
   3.796264082620117*^9}, {3.7962641655595703`*^9, 3.7962641849335938`*^9}, {
   3.796264273251953*^9, 3.796264274779297*^9}, {3.796264361392578*^9, 
   3.796264373328125*^9}, {3.796264430979492*^9, 3.7962644355322266`*^9}, 
   3.796264466379883*^9, {3.796268520283203*^9, 3.796268565701172*^9}, {
   3.7962698862470703`*^9, 3.7962698868408203`*^9}, {3.7962774032958984`*^9, 
   3.7962774197353516`*^9}, {3.7962774863964844`*^9, 
   3.7962774895126953`*^9}, {3.7962775853876953`*^9, 
   3.7962775876904297`*^9}, {3.7962777496064453`*^9, 
   3.7962777502626953`*^9}, {3.7962779496708984`*^9, 3.796278033298828*^9}, {
   3.7962781395146484`*^9, 3.796278163576172*^9}, 3.79639725221875*^9, {
   3.7963973448291016`*^9, 3.796397385080078*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"3564c56c-92a5-4753-b18b-0e0b21036afc"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c81e8Xt0f23uvea97rGpVVOYfwLSklCikjoyESDaOMkFDRTqGMkpYW
SuOa2XuTrazsPX/399fndV7nec58f85z3gou3lZuTAwMDOVsDAz//853lRWR
YtIMmQJVn61uKGNjkri/UWsYTNi48tZpKSOK1LiIt94GAXNr6spBJbywP7OF
uTUF3Ny45F6dJaHAuNjtpZYPUD0y6Ku0Xx4jkzMCF7Q/wy9WobqCaFlc3a/v
NncjB0wdQmP+XJbGoY/2elM7v8G6xpyORZw4HnMbVZhI+gFbBaUzR7NF8RTX
j4j5IBpcusa82jQrjN3f9nnPthSAbMN/vkrfBTBBRMzVl7UI5i8Fyqnv5kdr
r27bae1i0H+5zFrdzYN8v17s9XEqgfne+PZMZy4slztrPHnjFwhPLG7aIcqJ
EZf0dL3zSoFlVGj9vxU2xDoGyvhQGWhI1iho8LLiimqZ/BnRCnDJMbOWsGDG
7LB4kbGdlTAu5OzO+4ERz3bYbTrtUwUSsdWFvDsYkLyFsDGcVA1O+d9MLBrX
4E/syMyJyhpQ2nfnz6TnCtSes5udCaoFTfufhx4aLgE1+bvXR6E6qA0RtJU3
WYCYCoXhc5l18D398eiPS3MwtBBxXNuoHjwdvrqzts6AGWnk91RLPXAL2F7q
OToNafv32b73agALxmdj99imgPHyh/qzrI0gxWFSGpo4Acdeiu7VfNIIRP40
/gT3f/CtKeDXhHYT5NyVONjnMgoSTN1G78qaoOSQP/XgjWG4QN35zcupGRwf
jLS59v6FRvsXOtSFZrht8mqS+cgf0LrG9f7fjRYQ+SRZHzk/ADc/epPfkFph
UwjfVGpWP4x1N6R75rWCv0vaD4/IPtjNrSdPsWoDn00NCpTzvfBc70nC6FAb
eG44p8QF9ACLG4PIq+B2SD99v++PSjc4x7veOiXaAStMqetNob9BeoQSPryz
E14UNIhW3muHANH49Yz2TqgtJ3fMm7dBi/HcpRM+v+F+cmVqiEQrbPG2m1Hm
6IIPm5vuq23Q4378/czfpC6wLpyRmVhqgslfCkPPt3bDC+Obj1bYm2DvbISL
e2U3/KPgo0zlRghXevFqOqgHCMohbaT79fBhe9sJq9IekCkOb3Tuq4NeKy6l
D0K9cCA2KU1qWx3wn9zRL+DYC38t36nbJNeCYbD3U5/MXnAjHe4i8dbCmXvP
jtbN9YLeQdmP53hq4MmrBkktoz4I/FTwKJ2/GpZadO9NtvSBqrCCcPN/lZCr
zeH0QrUfzKSa7bJPVMCFG61qxwL7oavg9m3xR+WwZShjTriqH9ZTXCgVLWUw
bexPq5AdgAcWeixfiGWQlbg7JuzsAHjUM08OBZaC16LEIf2CATi6jbbbr/sX
jLz5OvrcbRD2GM+89S4ugQyOmOyjOYPwpFpA2desBNyPHwkV5vwDfHwV9xZr
ioH0g2xRYf8HiC5stz2di6FffFU07PUfYB397WyxXAQpvpW9eut/YJfI869S
CUXgVP3k9YTlX1iV2V/jiUXQeXWH8dGZvxC+0ru8mlQICV08PMKmQ6D9gLc3
8lAh2Op3tZTfHwJPrrKtikKFIHr3bUro0BDIyF95d6OxAJrGr5zRMxiGnOZ0
3aCEAri721JvImYYPuq08H1wLQCrNDnm57+HQfhC/otZ7QKotqM9FAodgRVG
YnpVez7Efoo7Xl4/AlvGhr6wfMoHcz5naihpFNQibqdExeUDxymtJd0LoxDr
x7KoeTYffhUxFo3/GoVrES/92q3yIVKu/ma6xBise8sfc9HLB5OAFDuH02Pw
iPv1nQz5fGBqOkcS+j4GZvmlNXFc+UDT2DlRxvsP8q1t1DYWaXAlWuhriNM/
CGt7t942RIPtg/3huh/oskHYzU0dNFiGT5bjzONQp1jpEFBDgy8J4ZLpNuOw
kvxzQLiEPvfmrAePvBiHmBrm2l8/aKCzXzFLcGkcPofVLoZ8ocFs5lxAmfkE
zOQlTGhk0+ADa4lpyJMJcLBeGir+RAMfp/v8uuMTUEhyxy2fafDw6Md/83KT
YB67rfpMDg0WoqUO1u+aBCcof+6eR4NDuVdz3/hMwnzU7IZgPg0+D47KXE+Y
BEpqiv2JUhoIC1lfdS2chLvG6opH62jgi9+GYGwSPoW2jv2l51N/hrRPSmQK
jNW+HmOg56v1OPbj/I4pWPRQaE+ao0Fc6ax4vfsUVHEFVeax5MPEnMOVN7em
4GS53LP9Ivmwj1jcH5U7BePMj+8dVs6HN/vVd7v2ToHUi+CxcoN84L5y7y1s
mgY9zgLmdMt8KG91858/Mg12VeScwMv5oMpW3VUXPg2L/lOHz97Ph6jNOiZv
3kzD5REHw7ysfDC7ycbnujENg/vyF/8bzof0PC8/UJkB9sv1z8LZC4BluLlN
8sAMPJ94U8itXACFO1+k1aXMgDbPlkOLJwtA8+a74YXSGVD7wvNqProAklpz
qLITM9B8MOwj/5sCuHSmNPfUtlnYaZRDvDdbANQHw5XMjbOw585ifVNcITzp
nRJQW54FYk7So+dfC4GTsnxov/wcWOndz4kfLIQB2qbeJ55zUKEj9CHXsAgS
RshzW1nn4fye7lKn9SLg2LrFwIE8D9IHP7aKaxXD+eDtwWEH5oG/tjNv2rUY
9gvv5axJnIelm00PBGqLgdXQS+aEzgK8fcJRQ/5UAmfjs0wTPBZhqcjdLvVz
KXR15EbTbizC5oVPKk4rpbBHKb/mz8dFMHqhq+9iXAZKeXV2mxmWwLBV5KtR
Yxl0DEyfqXy4BBcafKVK2Stgl8bKh+kfS6AkPCPHblsB2f7Mi+KDS6AzlHwn
/WUFxPEKh7lpLcOIVU8334FKMNPben+9bBmqVl95cLyvgk9hOzpIk8tAUfm1
+I67GhSqTOX3iK6ATb2HYMvJalh1PpT5wGUFqJwn8z6r1MD7mIs/NFdWwJU1
++Ejh1qQ7v7yx4WyBlqBB72+C9cDw4zPw7IDa8C3CuFh++phgE3NXPPiGhic
lLirdL0e3lAT3qzlr0HYVYFkUcYGMLwS4Pfw8DoQC1b3/l1pAEeZbUzVYRuQ
Z29z/p9cM5hozXzckrEBTb66gmwnm0HF9JXb46oNGNl02lbjYzNcyr7huoWb
Aa076pfyzVsAu9Z+MR5mQI7Z2dw911qhTr3r5pMxBjzH8Lz9gH4HFOl+/Wu5
wYCzInoZevc6INvoPjILMqI4vhL2nu6ABJt90yd1GXFXZzyxM6sTXC7/sNEN
Y0Su382P9Ay7YLoySbpejAnVG/XKntT0wEBzwPkINSaUUjjCq8bZC809h6r1
djChZTIlJXJnL3yd5Q1JdmHCquxI8pevvXBVOrjf8w0TLoV3mtp87ANhT8dM
9p3MWM3wxoC3dgDU2FNL9h9mxkfveyqlZAcBU/70PTrNjJUsIsa2ZwbBs/WM
FOUuMx5PXe335vsDRSZBsfsHmfHnK90tj1z+Qnv3z4xHS8zo8OAkX9LXvzAZ
wFzcx8OC6y33ri8IDYH0++g1Px0WfLXTMuBb+RD4yTzyenSNBUdE/dKkd49A
dG5ndN9jFrR7LMd96PUIPD0o/4KcxYKW6jWXeQVGofL6i+7vrSyY3OxGFuoe
BdL85/19qqz4fkxcmvvmP2iortcmV7IioUM770HSJAydFLX062HFeBEG1oe/
J2Gdxf7091lWvFFZ/SJaZgrUtvWmWsqw4SapTFubp1MQ9mJC2M+LDWmqapp/
3k/DQ+PNWt/D2LCHee9o9+I0vP19YS/bAza0Ly+wGsEZaBdaj3j4kw1/lm21
MWqkz4kQ7oVv/OwoeUyz6BTHHOyS2i/EpsiOf7Zd9z9qOwfHsu9oWOqzY7q2
GMPVl3MQPSZ5oteZHb1O3si+ZDkPfbaqbawf2ZGLKlJ1K3MBbmuZ5e2z4cDI
VwpW1c+WQaPD7r8dJzgwjofhuRvDClSGn2kgB3KgY4kbi6XTCrC13h3leMaB
2dkHH6uRViHwSr9U4RgHel7jFLn+bQ1cK0KCdMM58cmfTqpGAgMynr/LofSA
E10zB8O2NjFgkmzGXeFMTszeIFnyCjBiq0/N66kaTox6rH1mZwwj7hWX/f1K
ahO2w+J1/mgm1HHL2yH/cRO+mNnUMf2RBRt4a8p4SzYh3/m9Zx6sseDZ3D6b
tdZN+FjRZbvxLlbM5Nrk1b6+Cd94Zwbl0vsi98E26a45Fzpp75O5LcuOHBtz
6xx9XOhbqiTkVceJ6RmcMQuzXOh22tTXVH0TGlvJiP1h58YehbALx6M3YVC6
iUahOjdyfXm6K2IXF07uueN42Z8bfR128HQ1cmPbQ03aFD8P6hEc7wlI8GNC
wyu+C4o8OBeTs4VwmB/teZUdl/V58DxbjonCfX7svCqzznScBzcsHT4vigpg
j9em7cKfefBuN4fdWZIgPnsZEfOwjAfVbu8+a3tKEF0GGDqku3hw8kyihsV7
QRywW/BXZOfFUVrvmJuxEA6ZDOTo2PFiSEC4T72PML4MdmTPO8OL20o++kbS
hPHU1/ZDEMaLN19qWrrzi+CYRt3cf6940Y207fXXjyI4Kfljs90aL3od1HpA
5RTDxckH7wKf8WFbUT6nyowEfiELbWx85sP0u27nXx6SxAD3m/vCy/nQMfmN
blKeJK52hP+LneHDIPNZkdnrUhjSnytSQ+BHYiHPgRo9GQyvTj/Y48ePTJd+
hgX6yOPA6eOBhGB+ZN6Sn9XyTh5NORVSXa/zY+qZ+E/cE/LIZvJkeiiRH6fE
kqxYzypg1Jfb8VMl/BiSeJHXMIiAMWnBNUwSAmhUo3Rg+BsJzbecFBQhCuAS
Z72rArsichRZ2SirC6DssdF0VitFDO9X7NhjJIAvdN7zvB5WxCBC5Z+7JwXQ
eFlFZFpWGQ0+fFZ94SuAJQIlF8TOKOOiUbLnl8sCGJ7ErOqcp4znnc9N/44X
QE5DUZO+wyro9VR8XemrAKZt/j2wHqOKFE0mI/0iAfzsFOP/s1kVR36OXt1T
LYDbC6dussuroUf3D86zfQJo/oJ3X/5rNVTyzrAIGxNADwuN6CMTajiwHn/r
7rwA7ml4UVhJJWPKzcD65wyCyDT2+OTVU2R0knUT+bJJEHWccgU7n5FR9u0+
2wphQYxYHOqVayRj5w69x79lBXHlefFCGAMFE6oUuiZUBPH9/hBfohIFbY9y
KTBtFsSxGfvnHCYUFP03e1x4hyDeaFroJNhRsDGo67nSf4KYMOezsceVgre5
S4f1Dgji8flo/d10+cCT95Q9RwSRuuW+dPVhCvJTHnsfdRPEIv/OsNAdFKzO
C//g7S2IS5HqISzCFIzd4zUX6i+IbeERlSttZDTvOKx396ogyu+8WSx1k4wc
p40Cn98QRAnfOkFdDTKWLKv9yH0giJP/DX6w/KaG4dHCjBXPBNFrv4lA5hY1
NJZc3/n7lSC2un161vNAFRky/0ZOfBbEWxkv1uYHVfCHfl0ZI00Q0WpS7bSc
CgaVfeUWLhfEHZuK/IxMlXGbXZqlUqMgbg2yIm6yU8LloRu39boEUWj1QFi3
gyLmXrrYZD4kiN+N9CrsDpJwy0PzI96rgki2uE+LIRFwWnlLUiibEG5iIiQz
sylgVo5M7x1+IRT11H/+tloO1Vsm3XNJQih1Itxd5YwUjrm3vyynCmGDmPby
aWsJzJwvHOvUE8K84dfXxg+IoZLog3OMe4Uw1j8jLemJEA6kh3wWOiyE2hfX
rH//E8CUracWFZ2FcHX/4ctPj/KjU/HBbXqnhfB53nxNXQsPytrsuGJ+Xgib
J8907dDkws4BpXyHYCEMKL7ocbKAAxP8+Fm8rwvh54l7I9dj2NCWZdks9A59
TpwWLTwWxYJid/uv30kUwvWvN62cPzOhOPlz+OJzIXydO7OypsqIkgWRwUez
hLDGI6OmOHwDpO1sAwq+COHuJ6kdVgurIDupel65UAjPf6JPoefLIH9txTu2
UgivkbcNZcYsAkG26tRUkxC6ioi7aKTOA+lzktuhbiEUFCrWX/s7C4oWZ53y
hoSQa9eZonKbGVDqNzoiPy2EXzNGV94OTYFKgNChiBUh/FGjVi6YOAlqAoP7
R1iEcXtd3IxH9zhQMrL3WPIK4w9a2NNteWNAhSizT2LCWFXt67GrdAQ0m+2M
JBSE8QOxdfc3xmHQPkPefkVNGLtYsmPh+F/YzLKm079ZGINeK88ODw3ClsfV
Wrt2COMdV69QvVsDoKP9lPLGTBgPfOipYj7YD3plPsqC+4XxT65Q9gWtPjBw
2km4aCeMNX6qGRwqvbB9QVim00UYmy9f2+6zpQcMb/4RM/IURm/bf5lmL7vA
6Nt1Hq5gYXRc9hu5fLsDjA8e4TgbJYxR/9jrObe2g8kIhbkpXhjfR52JvDXd
Cmah62v6j4Xx4+zKnozSFtglXruYlCaMzrXiRqqfm8H83bMZ5rfC+M91/D+F
7CawMPMdP5EjjOG3tz2uLmsESz/RAe1yYfRUOpcnTGyA/VxDXQ8ahHHBMFlq
1q0erFK+tK12CuMRMJblya4Da/2YRuc/wjj3pavBXLAODtU61JRMCCOZgcf2
m38t2HpQy8lLwijOFds531wD9usbRXFMIlhtNJAWVlUNRympX+1FRPChZvw3
jvFKOFbo9/mnrAi+zFikhopUgpO9WRZJRQQTlyxDJswrwGVK7NV1LRF0K+h+
ZnujHFyjhtPHDURQVmmOVNlRBu5yeU8PmohgSoq426WtZXAiO/Zx7l4RDKsr
sbz3qBROD2jEhzmJYD0l1OX4lV/gGcgY+/ekCJKFdwQ1rZWAl2BDpIWvCArc
P6ywI4LOR16mhb4PEsHG6Jl3osIlcA4vBIlGiuCKxn7j8ZfF4Nfy38XAWyIo
dzrDz9qsGC54SZzreSiCHVbF3oNDReD/5JtH5isRVHv9o0ISiiBg800Xvs8i
2H3gkJLEdCEElTse9fshgj+djermXhbCFWct27ZfIvgprOPEafdCCFlkOmhY
J4KUu1NR25ULIexW497UdhE8VXlphjJWAOFKz3dxDIhgMbdtMNvnArhmvduw
fl4EF6yk+N8dKADJT9WSTIyiKGO+tyNSoQDeClkvaHGJos/XgQmZuXww9m1r
cBYRxQWphdqdlfnQXH8sK15OFMe5UjZVPc+HU9oDsfmqouixKON0Kzwf1uJP
npzaLIoaNzjd3dzyIW5q3FTBUBTZ+KJ9ybvzgXTAj3BglyjGeZ2wp2nkQ27W
0nqIlSiOGjxQZ5PIBwv+4I4sB1HM1G1q6qbz6x5vltwed1G8Yk65snmGztdr
rt/l9xFFZ4MJ16F+GrBp8PlgoChqn0g7/reZBgk37+49GyGKLk/HlKQraUAd
l1B7eksUYyEp+VwhDQr2JrPVPhLFOvm1ty3faHDoDal/I1UU5R0Eebbl0mCE
O/OnxltRTD3yfiH2Mw2ueGo8ccwVxeSUkaHvn2ggUPnp0q0CUaQxPfGm0fVp
ZAObn5WieNPoDiWKfl8v5qfWRLMojqk1l3F8p0HliAmvXK8oOnQ1C+jS/TuZ
l4/sGxXF+DJ2E84KGsy+tPx1ZU4UCYqbcs830uAaZ1Pq2w26/xx9bd9uGkie
tA/pou9N+srvRpZGafC2tNuBV1gMz8NlD6ZlGhiruOkbyorhjZrduyM46f25
NiLipUKXT2tBkCS9H2Zz1VXbxfCM3o2H75Dej+cBr9bMxNBD7C+l14beDzaG
KHX6u8HIU8tyzpNe/+JNRjfcxHDt/rbCp4n0+pPiZL57i+FR83xP3dx88A0X
WR7zF8NtUUydso35kLBT/qPFTTH8e160qJGvAKip6beCHophXZLx7ySNAihg
Inu+TqHbe/zRPWt/AQznb1XkzhFDqYm9Xqn3C0AP9zyo6BbDktsTfm+1CqEy
udZ3ZVgMeZ7ku9w7UghOGzb7ybNi+OXxcNf3yEK49sOJM4ZDHIOuF7U09BRC
8/YLgeZa4vhn1SpXMa0ITj1ZORywTRytC7UjlFuLYG0lZEumqTg6hLaY+/AU
Aykv5h+nvTg6enka9QcWg6/+M8eyMHG0OcoR53uiBMyf8s7uiRXHO0/ebslJ
KQECe1BU9T1x3JBwiVPqKoHaxkPvGzLEccSs63S87S+gnuVm7qoWR7b4mOi2
I6XA2uL/wKlVHH+Zmv38llwKnTv+kvt7xXFbWnFE90ApxHAVWA/NimN+8tPF
8XNlMPT84vNpSQm0G0r0jEkqh588gwbnSRKoV0L2/zlWDvf9rGoW1CWwvEL6
P4vtFWBqrL64ihIoHif69Up3BaT87tvN7iGBY5t/H3yrUwUOwvv+SX2UQC/S
Mbt+kVrYHJgXmvRNAg13q23P2lULm/pURBVKJNBvNXHZPKgWvrxjBqU2CVwT
r0qcGawF0T1f4jQ3JLCtMfesfWEd/HuvpPiRQxK79PrO/V6tgyLxu1+2Ckpi
5ile6Z269eD7x6vPQFESxeIHFvLf1kNtKGmL6R5JLPqbM9WT0QAvhuJLf1lL
om7PcmbFcANcsdxwMD8miRZN2jzvyY2gLtMeYekjiSF3V5n8PzTS+fOtFrsH
kkgq67Czr2wCk4nlAK9+SaQUBO2+tKUV/HfdVcsfk0SW2pCb3BGt8PaZervQ
vCSapnh5lDW3gri1k/4XDim05N0vUXm5DcZyixeYqVJIENp7zLW9He6Exfk9
uiSFlJ6q2rt1v6G0Q5U0FiqF/jV3+p/pdMHqlsIGwxgp/HovM1Q6sQvc/85p
DyRKoZd+j/EZr24wsDgyRS2Uwpr9PYMR8T3QJ6LkVcQjjX7+7qxnPftAzPun
jJiYNFr0fP2b8KoPLEptq07KS9P/D4nOF6N9kB0QQ+HbLI2j3d+bfb36Ibp7
csTOVhpPde+sUw8eAO2XeR4TKdLYJpVcxVv7BzyYbMSMX0vjrQ233b2yf+HJ
kfGSu5+lkXu/+1SF119g41VQMiiVxshLR14sCgxB+7nIgfB/0tisbz0h5z4M
odsPOEvSeRJT5Ocm3D0Gu44lTesay+D1ty+c/34cA96Q0as2FjLYnDKZqCz/
D54URjyPc5JBHkWfHTfW/kGu+ddRtusyePi4ouPTygkI9mS/TLojQ+edyUQX
wiSY3bTmNU6UQaIVs4O94yQ01o1rXn4vgzYudxO4Oidh0pZ4YaZNBkVmUwSb
e6YgJ+Asu8CADKaYmjJfIU3DlSffH1LHZTBQ8OqIyslp4O45nHeSSRa97BS9
HsxNg7JHLEOPmiyybL9ZuktqFo6dn4uuDJTFF6m/ZlIS50HxgbH0SIQs8pZE
a3jOzNP7fesNe5wsVv3cKXHZfAECVlVrjdNksYjaPXp9dQHuXT0m8qVSFoeP
1nt0n10Ch/RXz5ubZVG4LzzWr24JCL8WdWd7ZJHqQLIM2LwMWZvu2GvMyeJb
gqno+MoyVMb/Sk6XkUMCGyFWPHkV7nwU1ipUlsO5za8a67nWwL7JuaBHSw7j
Oq6VkAPWYEh8dUDKTA7fOl6qqD+yDsxPNdVue8khZe9iTpMEAxq8ffTpyk85
XHnvd+qdDBOatFSvjZfK4QeRGYGxo0y4j4HlP8d6OXTIC+zlTmbC41ZebTAo
hyzqZ76wk5jRLFAhOIRVHtuit2SBPguelZtPNSLLY5LSvpj3d9hw7mNc6ZKG
PD78KeFb0s+GAbvI/95vkcf1kuAnC1vYMcLHSYdgKI9ceTEV39vZMaGwvJTp
gDwe5wp8uHsLJxZ5JP8rvCCP7mr35qSJ3Lh7VV8wKFAe5y9cFfwbyY3VcY06
W0Lk0fz0tzuCY9zY9oUzJO26PBJ2F8w+/cpD3xP8BCOeyKM144Il8SQfimft
0jUroMt7E28qRwlgokn/kfUSeSTrXxbeXSKAhLbLIdkV8ui48PORKasgqjN9
LFNqkseDFmWUjghBNLaWcWAfkkepyxsJlfFC6Lk4FVLKo4C1pL9XI1pE0MDH
XfSPoAI6Ocs37CeLIsdI+ytmcQXk44p0tAsRxfSOwmZDggJK3M5N20wVw64f
9yifdRQw2TFsPuqROFpG6Lc+c1TAuixByqsPUii7/ubMT1cFOo+5Rj0uLY1j
FwjMv08qYJzt6qGn16Qx6gQXVdxPAZ/o++3Nc5FB2p7fV29GKeAjzl7KMFkO
tQVDNQLfK6CxwxXX1EgFZIiZK3qYrYD2HztbIksVsJr5lH12ngJqnjCvMuEi
4Ok5q4ipYgXc+eFK3b47BExrJXV4tCvgg2xaZuAbIooml0ZaMxPwjM5Tvxk2
JRwQ2yF9joOAIwJKVew2Svgh7v37WzwEvBb4YuVuqhJahiV0losRMEclPKrM
SBmj3Dy1jSgEPFyQ8Tg1WAUPdfX8OqZFwLrzvBfuVasg6bDN0SAdAlK4uokz
0qpI22UYlYMElL34oWI9WxVv5n+QaTIlYHJe1B9JJjV0MFD+OG1OwPmwbLcr
e9RwiczfpW5DwIe43SyoRQ3nEyVDN9sT8BjXvvsLYmSc5VMk6TsSUMfNK3bW
moxToRq/DF0JqHV894+WG2Qcn9E/ZXKSgG69Lgwz+WQcdTPhMfcioK6Bt1D4
JBmHWvZlWfoS0Np0fstHcQoO7rY7aHOJgJ8TeOxv61OwL+/4vP1lAro2eudI
W1GwW93rkVMYAR9En1zTcaZgZ/Kl7e7XCMim/fBalhsF2wSudp+OJWCGP/ek
6TEKNl+9EeYTT0CqR5pg+m4KNsw9ULx4n4CV/DdUfZUoWOuRUhr0mIDPM06x
28yQsart9emwpwRk/FQytPSWjOV7cnij0glYPiXWp2JLxl/f89/fyCSgTexw
Te0/NSzSqLS+846Awa5JxyS91TD/WfPCw08EPNIS7hDYoYo/hHoTkr7Q67WL
UapcWxXzIkZ3pP0g4OVkUQPL8yqYuzDX87KQgO6JL4cbUpXxQ8cm5c9VBAy/
YDL5rlwR3+0VKf9aT0DeptLgnb9I+Pqn3BlaC71+cXVHdXKJ+Dx1y8eKXgJm
+VsFiYQrYMLpY9A3R8CiuMvKgTsl8cHvE31/lwkY+uR9ca+uON619I34t0FA
PrEdCp4m9L01/7LKDAsRvfC4CSudh97cHFWxyElEBbYXqWlZghiTfttrnZeI
n+LjfJ2FBDBKLFGARZiIx3/+UZJS5cOI6y8+cUoQceNTGXemBzeGrbw/zCdL
xNK304Xfezgx+My3ZWEiEWW0PXU64tkxqLskUVKFiDNfn6ctXWRF/wN1KK9O
RAmu8TOfbzHjhcKOfkVtIl7tZW4NaGJE361/Ism6RJR9bb05w5QBz76YVNXa
TkSP9pOb9n9ZAy+JlUodIyJSAhitOagrcDqG9ex2MyKe1caFwb5FOLHGJ2S8
h4jFPYyJP+vmwd1bMvu//UQcPfulvWt2Fo73kuz22hCR4eSsN/N/M+B0UGPV
yp6I3F/XjrgUTsHRYv1kW0ciHuozZUxxmwR7XRPjY65ENL2f8zzj4Dgcfrlv
8PhJIj7b0ZXeLT4G1lJ2USe9iFh2ub3plvAIHLhxnOztS0THkfT/NhkNwb6N
M9V+l4jIfq613eDRH9jjc8kn4DIRc43OyT0SH4Rd/WHCIWFEPLWzk0syrx9M
bW7kRFwj4odcFhnS5T4w/vXAPiaWiLrvdpuGHukF0E9Zi4snYjwqm9oc7IHt
r14/vX+fiL7qlGqVoi7okH+VbPqYfl9gRs9f+TcE3H+ZNJtMxKawCzInX3WA
OHdGYmoa/X54zyHGve2QE/r8idVLIipbCG96yNkGhxbSHjO+JaIBv7BpaVcL
zHqmJmR9IOL1pMj+E+XNoG379CHvNzp+7PyeOf9uhLqqpAffaXS8vPMScGZs
hLM7E+97FhOxq4ObR3JrA/B9eXxPqpyI5utoDxfr4S014W55NT0+n+f8z0rq
YG/awzv+DUT87vpLdCuhDsYkHtxWaSWia8B+prWoWlBlvRsX2UvEMwNVRXeH
q6E04PatrX+IuLvdrPbmZBW4T8bdHBih11805FwnexWwut+6cWeCrk/wrzSm
VkJax41Y41kiRmkHyWW5VMDOA7ExU4v0evNbpUmnlUNfSXT00zUibt3llfJs
qgzkP1yLWmcj4Wh1Inv6m1L4qRx57Q0XCXP5/Q69kiyFY4nhkQ78JLzduvVo
TdwvWBW8GsElQkK3qKN+QXy/4HFUaPhXCRLqkZR7iPdLwGA9+OpJWRLubrp0
3JRUAq2+V8LEiSRMbTIuO/WlGEQdA0MuUEhoOp36i2+hCD43+gcrapHQ8BJf
b2VSEVibX7rSuJWEf+rDF9ksimDm54XLVw1IGHkt/PaZ9UK4vfV8kDaQMO5E
kk3250LQeuUb2LuThAvRMz8SfQqhVv5cQNwuEt6p9G/vo/MzHm7vS+MHSMh2
xCr82Y8CeB165mLiIRKeNw9ryYouAPOF0xcsjpCQxa7ffo89ne95njq/4kjC
NeGXn3eqF0BU3wm/TFcSWikX855jLgBlWw9fu5Mk7Gnhl8zqzIeSKrdzHF4k
jPiv9VEbnW+yfHE5636RhJ7eASze/vmQSnX2FgkiocQF2+iko/lgnOboVRRC
QlIFQ5qxCZ2vShw74xtBwpaktnNG6vkQfMvBkxBNwnSC/8BV8XyQZT1yuu4m
CcXftBNnWfPhW4DdqZA7JEz6pkC4PEeDI5OHT2o8JOE/wVld7r80WHY7dKLr
CYn+7iYa3GqnwaMOa48bz0hYullMfa6GzvcPHHTf/pyEDWqHaNRfNGgpOeA2
mklCnq1n+ig0GlzYvt814R0JO++Jj/Z+pYHIh33Hd38iYfKV7SpGOTT4pLzX
ZTGXHs/3zdKGn2lglbjH+cV3Esr+t1pT9YkGU4LmTocKSFhHqlkZpOtbPQm1
p+hzXS5UN6k4lwa0kmUIriSh7sSBKfvvNMiQb3h3p46E9R9V7j4upEFcwCu5
jGYSvvvdjJcraHCp8eqtbx0kVIkxVZhvpIET1WGjtoeEE5ORg2vdNNgVtcV7
cJCE3cZv4mLHaKDZx929NEJCZYcmo4RlGohvH9zHO0nCbwG5m+U35QPD/e8/
CHMkPHvZeqe4VD4MTdyj6i6TsPj8fasgev1rdnsl7dkg4b5xqS4zo3zITjXj
dWJRxONFUdt8D+VD0prsFT9ORbwx5Va76pkPXu9rjiYKKaLS+3urokn5cIgr
o+q9uCIySdfnPKXjwdAtZEeJjCIG/klQ8W/MBx4JLZkJZUXUKUme5uIvgNlz
nDeY1RVxpWC2IF+jADore1fFtBVRq09X8/t+Ol5DbnfidkV8O2Z+IPh+Adxt
P2VhY6SIPD1nnXbmFUDQlp3fTpopoqSbtdWu3gLYMzTz+PZ+RbyTZ8AjRMf/
iKXNkQFXRfzakfUwvbsQ6l+qVyyeVESqfqn+ad4i+MrMto3HWxGnwzu2nzMs
gus52ZI6/oqYJVBStiulCFTkxNuv3VDEfSENrNv8i4Hff3L3k9uKqBFnJ6/x
oRgW60u/ZD1QREqa2cGzY8VQGun/qO2ZIrqQOFT7XEvAY7zdlpytiFfOLef8
cvsF+3Z9LIU8RQxTZRBzf/kLdFJi9Kxpimg+9GDUbfwXsB3aLn6Zvheov3cS
uh9UCs+/J7ZUdyni+cn6i6KZZTAQ63ToHLsSTl2aCxiwqASvEQpBk1sJU3KM
XyqnVMLCf0v//vEroUp7gmPTYiVsYr4dcVJSCXP1XqYGZ1aBpn/hJyd1JdQN
SNaOkKuBr823QmS1lVBC/OWbWyE1sHOLg0WnjhJC76t4pf4aODQx238YlfAi
K7kv4lAtXHZTErI8qIQfT22xlFOrA7bC6S5uWyUcZHtWJeFcB3HyPzPLHej6
okeU8Yd19Hl82NjMne5/4PtVDa56KD9w3WeHvxL2VvdnHF+uB1HDsRpyshLG
MySnEtma4Onj3MfD9D1YJH9hVNyiCVSXwj1eZChhDO/+V+J3mmD7J5kNwgcl
lFdpzjYlNcNxNUuqZLEShvzs2/nlYAtkiX6I5Ril6ysy4m1G2sDA74ptyYQS
epmoaGcZt0NhnTkpfFYJHbmzrhx80g7Nsf15G2tKqOZ8PCniYAesMomMzvMr
Y1vwS0aR+k7YPXFx96COMtpEGedxbeoBaS3ZSI7tymiRuXjb1KwHxs8VFZDp
e7rpp7yPXld74O48//Zze5Qx+4rQwycMvdC19pK64aiMqw7Rp6rZ+iAL9p8m
uCnj3QNMW4fM++Bq6PwL01PKWOGkOsQb1wcqrDsVYv2Ukd9LSOOOTD+c4+4U
kriujDB42faf6QCY7Avbv/2mMlpbHmzpuz0AYnEqNxzvKKPDgYsdbL0D8E3o
PNvzRGXcSC4n/wsZBDYp3iXtD8oofg1Dc2r+QIIqdll0KCOTkt3uuDfD4Hn6
j+TZHmX8dvxNeQ7fCMCb2MN3BpUx/5Mju6PvCAxottW2TSjj3MWMEBMYBare
uUJ3FhX6/i8qKjgyBgwB4gzRnCq4GgteXbb/oCHvx/Y3vCoo+jVH5UjZP7gE
XNkz4ipISw04G/JuHArN0jJC1FXQXJAWm7BrEu5HmQ+maqvgY35DDvlrk3Ci
fFLhl64K2vp4KD0qmQTefTse8xirYORIl8H5XVNga9N8I+GQCi72a13fYTsN
Y8c5fD/ReRGtumFP3KtZGE8y+f4zXAXjOKlf3i/NwkRbCHvFdRX8cjLbaW3X
HExbLj3uvaOCLufaxBRH52Bh20gRb4YKevRd5dxsuACLF5T4JN+ooFrW8jbS
/QVYfu9ip/hBBRnWdJtdJxZgVbnj37ZvKnj/hpXBUPoiMAlXip6sVcH5E3G8
4cRlYLHkcPZrUsGjd216L0cuA2u0yavgdhW8pz3SMDmyDBwM3+H+gApO2vrl
2eauAO/YmxOFiyq4YMi0tcZtDSSKbn2VUVDFc+/ctKyjGFByo4JFVUkVKxhl
bTZKGFDagMNyC1kViTSl0odsjCibFdJvvlUVb7EsKqRHMSLpiQ/3pd2qSGDY
tvf6QyZUanlz6Oo+VbxyctdL7m4mVBYceXrzoCo+3vay87ESM6pFuWxNP6qK
AUrn9cZzmVHT7+Cxeh9VHDr9vKpphAW1393K+H1BFVefTk6oGbDi5pGK6aFA
VbSMlOd6E82KOk4m1zYiVJGjrOOzuQYbbrPYmkWhg6zuVMvgmWvsaEYSY7pW
oIpXI1zGwy9uwmGX/zK2/VLFFn1jUbmmTRj77OK+yQpVvGa69znzFi5skG1N
sGui+285yvFjjgudJB5tpgyponQvX+bl6zzozyvlVsejhhcafkVvDuRH6b17
uCIF1ZBNpqLV7zM/0mIC3xuIqSH3Ty6Fq5P8yMbZuZYqr4aUZIgROCmAt5kT
71/YrIZbT7fuNHMVxNeLsqVSdnQe7HDzTEqEMFrqWnrVHlVDCZ09j/irhXH6
fLBwhIsaXiOGVASKiaD+TLfT+Gk1bHZ8deTQGxEs+fd0iXZFDWX3fBb2HxTF
7j4C2T1NDclWxnA+WgLDFA7WSb5Uw0qPgwrmAxKo5HT1Ys0bNey88UnmIEii
5+/+Qr0cNfzFFfCQb0kSF1vSHLjK1dD0B/bdDZRGwSqlm1kTahj6ILmo+Kcc
rk9oppfPqiFhI9d+VEoeRwS3fRtYUsNeR5raL1t5LLC1HBFnIePZ9OKn643y
6Dtw0SxUnIwCOk8uXm9RwMaV0vUDRmRc+QudHKwkpMk2iHiakbF9hRbkso/O
P41+UyL3kHGaz9E0mL5XRVybsv9qQ8bsdN6Cv1T6uy0kmUM4RUbPA8UFbseV
8IHaae+Z22QcCGSoPtChguF7z0fyPCTjz+CvrkdVVfHs2eBE5UQyZhiEfY2j
42hX9p2KIy/ImLyPb9tBeh+3tCX2nX9NRnfBhjaDQ2oov/pi6dZ7Mt7hFQpY
eKKGi0bflIvyyKhoUHlUlED341pi2EUjo8j15jpnRzLWXqu1WSwmI2G/of5B
ut9vme2eghVkTPH4Y6BZScaXVQNXKbVklDyT+k5lmYz3J8cTzJrIeFVu3zEb
BQqGCS29d2onI1Hlt3wOUtBLh7ksoJuMqsF2N3UOU9Dejqfn7gAZhfe/vpJ2
nIJmQWILb4fp8qHjH/NcKaidrMBbNk7GNEeLNaIdBWULyIr9M2T8bM0KF4GC
mwa3bl9bJGNNQ8/bXaIUnGfHg2LrZNR7yP+O2knGPjXzU1rMFGSUCr5Uc4uM
1XutQ/dwUFBJJShtUoOMeWePPXTjoeCJJlbv63lqmHHnxLtgQQr2WLx+3Kyl
hnezz5U8EqNgvWfssvdtVQxpC/r9UZqCByoe2jv8VkHP1cjZKnqeNOHzS0Qh
+lyVi+caUqIgR5jmtt9blNHE+DGBiULBF1RFTm0TJZSOerdfR4eC/D3GE5J0
HpL59k3hkgEFPfeuiZ/TIKJe0yud7/S8EvZGmaUTCWhNyJA22U3BBY3rlw+x
ymPfrue32PdRcO/0eC5lSgbPeqcxVVhR8M11bfaNXimM/fZ06IADBe9ryHBc
mxVDyf6kIyLOFDSsC1R0kRHFDM7E6lY3CnIGH/hccEwYdTQfGz05RcGaYB5G
i6+CWHTo0SdHbwrynPumO6opgFaXHygT/ejxKwoxd0TwYU/qvYQ/lyjIoPd6
r0YPN65MxoecCaPgTL9gWJkWB0aJxc1oXqOgXE5Twm0SG4oa3nSfjaGgfk5W
CocpC6a5xrblxFHwi/S+OypxTKgdE20ReI+C8un9t9uZGJH2PuqnYQK9rzrm
9/m3bMC+1khtpmQKxp2SWj+Svgqd6+HpxakUtEwI/FF1cBlOKV4Vv55BQbHm
6JYR/UVY3BMaY/GGXs9S+7k4q3mIPBe8zveBgsGF0yxrD2dB+NFln4ZsCgqJ
qXFWcMxAys/Agft5FOQ92UWeS5wCzT/+h+1pFJTWORNcZz0JP7gvlcsUU/DR
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
          "]]}, Annotation[#, "Charting`Private`Tag$114048#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
N9naf+C19eGJ10BDv+rgfpQXGc9fOXPD9A28ShjOCj7Fi17RNc/eNryF68TW
n7fP86IQ30ktvvP1sLusQiH3Ci8GjNtqmGs3wIreg4svqLwY+03zv6ldTVv/
YeSTloit89ijykU934PXaY+5gXheXFdTZ/w82Qoas3aaM/d4kRy6ZrFR3A5z
gft96HJ48bikvZeZQweU8GyvFijhRY1PYw32Qp/ANUNkQ7aKF40fSub6b3aB
kiqd3q56Xky1S/0pQuyGP6/HQ0zaeDFQnH4oI6wX8sw/N5zs4cXrsqS/B9X7
4dy3V6zuw7z4/qe5bpjaN5B1yzMNnuBFwcT47b8Nv8PoRvyt20u8eOREmlGk
wghkxl7rzKHhQ607nLP7DvwAByknwRdsfHg5VLU9NPcXSBWb2bQI8OF5W1W5
CMs/0L9H+96AFB9eMdE3O3d4ElI/SA9Oy/OhaZzWTf5jM2Bzkl2abgcfihzx
1OnetcVzJxf+E9jDh7dTxRW+Wy9A1/XBHNkDfCiPdmVXny5BAkfTb+3DfLj5
UdRe/fgqHE4rVTKx48NCzeeF/SZrwKN0z+2kEx+yJvvqmCZuQlt1aJmbGx/q
Pn18UOAeLcaYuC4G+fKhl5gR2+H79Gj89Zj27RA+DCkwmmH/xIgsLnrXcm7y
4e9301HWe7fmoL+KryqT+fD6r5/r54bYUF9sY99AIR8uXqdrW/6PB2kKfoVP
V/Ch5K1LDo8Y+PDVro5m2lo+fL0m1Ob4kh91jmeby3bx4fyH78ai/wmjRoqx
ndsaHzo+qrSu+ieFc3Ia6UFM/Li+/56c9VkCljyX/J7Iw48tIdwZdAbS6HqA
mZQjxo+r5R0q8/xEVO6eOVtJ4sdTUoOPHnwi4sTZvvz3Kvz41i8952+gDBYs
1U30a/NjUvBCfpAYCZ3Di7ZP6/OjZ7b4h70PSCgrlOxBe4gfL7g0GdVzkXH0
UWAF/zF+rDjA/JBwnoyZmhdWyKf5kYNBlretmIwO76x0tF340blRZd+DITJK
Hd3jb+zFj5cPVmoVbpKxf1T2zYkAfpyNHgzaxSmLqZ48DG5R/PhcYtevEjZZ
tGH4axiUyI/D04XLEatkFL49EpV4nx9r1ZNdtb+SUYRSEbqSw4/Lu2wb7J+S
UexteMDJEn6MrP3O4RtKRonjNn5vX/Cj3tAizz3TrftnFLzk6vjRyvhaVSMn
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
Y+FPYV3fc54g2JtTspWTju+3zC3DXU9YYp6q/4+Ljg+/FB/bWu8J/VLcXV94
6MiuXRBBWusFNW+KRrQ30LGWqjCepeMFOResFh5upOO7+nPJKf5eEL1uE8ea
TXS0LuYs1Wj0gvOGl6WrRegoP7ZoxUv2BsMf4mpyYnRUdnm7zfqsN6iF1WkH
bKXjAFt0041wb1htlrXQ305H7XvJoTjnDcNXW+zTZegok3XMfqeSDzQKed3g
lqdjbOVuyb1WPnDvRHfs+510hAf8u4oHfcB3+VaasjIdDypGSdns8AX7++Tn
YSp0NDJ0EZ9y9AWNgYiWQ+p0zD/IvhE2sObbV3sgn0zHx++Fo53O+wGn3MSk
oAYdm+PHJo6U+kH7RX2+dgYda7yFxmS9/OE194I4GehYMeDhGz3qD6lZqTtj
dehYVeZUUXE8AJym/uqd0KPjAWGHpRcGgXA8MuvYKwM6ektcfkl7Hwja6uZW
4gfoyCXWYTVhegs2uD/36T1Ex3s/+339vIJgXvR8hNZROsZwRSpflg6G3pKN
D5NMWf3OuoQ4NwZD5qp96VlzOobs8IhdgNsQmSz6/s0pOq5rnrhVxx0K13Vr
PstY0tGyaO6NQX8o6AVKL347T0fJ9ANEnfxw2K34cZ2eNYufuup755w7INTw
n9DTi3S0nw6QHbaIgBUHJVkuezpKqFFcdv6IgMENXQS7S3QsDi6k8fhGQn1e
ADZcoaO6S5e2jEwU5B9RP7TLmY6f5RkJuxujwCsm/NJPV1Z+XmUHiupEgw2V
4WF8nY6BKzmffDbEgPHnseC8m3T0WWbbp/A9BsgecfECTDoKeK2J2vQxFiS2
7Xvq7EVH8aWLCSY1cbC2YvZFqw8d73x8QBD6EA/jZ5PfqvvTkZp9Xbf8ewIU
P175uhBEx1/uF48kmN0Hyh6Xxf236fjsyalda9MfwIuvE3zJYSx+bR56awUf
AsnbWmbhDssv31PyFYbJUCjZR90fRcevn37tfC2aAmplZgcfRtNR5Nn3HwW/
UiDv1Mfz87Gs+2nLlpPfUiE7vjIs6R4dZ5T7Oz8tPgYlquajuQd0HEmJN/ki
9QQyOgqKDZLpSHT6Sn1g+RQUXZQ+PEilo1uSyAvtonR4sunR0OxjOk4fH3gt
sjMT5Aq2/tZ/Ssdrh0Dh1qsseHQomv9BBh2PF9X1X7XPgeTQAE39XDpOdFSv
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
m5wf3E3HK+F/ngJlaA==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$114048#1"]& ]}}, {}, {}}, {
    PlotRange -> {{0, 25}, {0, 15}}, DisplayFunction -> Identity, 
     Ticks -> {Automatic, Automatic}, AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Lotka-Volterra system with parameters: \
\\n\\!\\(\\*FormBox[SubscriptBox[\\\"r\\\", \\\"\\\\\\\"1\\\\\\\"\\\"], \
TraditionalForm]\\)=1.5  \\!\\(\\*FormBox[SubscriptBox[\\\"r\\\", \
\\\"\\\\\\\"2\\\\\\\"\\\"], TraditionalForm]\\)=-3.  \
\\!\\(\\*FormBox[SubscriptBox[\\\"a\\\", \\\"\\\\\\\"12\\\\\\\"\\\"], \
TraditionalForm]\\)=-1.  \\!\\(\\*FormBox[SubscriptBox[\\\"a\\\", \
\\\"\\\\\\\"21\\\\\\\"\\\"], TraditionalForm]\\)=1.  \"", TraditionalForm], 
     PlotRange -> {{0, 30}, {0., 14.1986124394689}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*FormBox[RowBox[{SubscriptBox[\\\"x\\\", \\\"1\\\"], \\\"(\\\
\", \\\"t\\\", \\\")\\\"}], TraditionalForm]\\)\"", 
       "\"\\!\\(\\*FormBox[RowBox[{SubscriptBox[\\\"x\\\", \\\"2\\\"], \
\\\"(\\\", \\\"t\\\", \\\")\\\"}], TraditionalForm]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7963973687666016`*^9, 3.796397378618164*^9}, {
  3.796397424870117*^9, 3.796397452267578*^9}},
 CellLabel->
  "Out[155]=",ExpressionUUID->"ad4cbb87-c94f-4763-bc80-09f91ce4d703"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Numerically find dependence of the system on two varied parameters\
\>", "Subsection",
 CellChangeTimes->{{3.7962691609726562`*^9, 3.79626919309375*^9}, {
  3.796280125536133*^9, 3.7962801348828125`*^9}, {3.7963991657998047`*^9, 
  3.7963991825341797`*^9}, {3.796399213116211*^9, 
  3.7963992390185547`*^9}},ExpressionUUID->"83791389-cc62-4076-a89e-\
24c38b414aea"],

Cell["\<\
For the next example let's choose to vary the two scaling parameters and fix \
the interaction parameters. We interactively then change the parameters to \
display its influence on the trajectory in the state space\
\>", "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963977642490234`*^9}, 
   3.796398616716797*^9, {3.7963991388339844`*^9, 3.796399153696289*^9}, {
   3.7963992596171875`*^9, 3.7963993164541016`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"fbeffc14-ebbe-4c21-8603-c40558758e3d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pfun", "=", 
   RowBox[{"ParametricNDSolveValue", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{"LVSystem", ",", "initialConditions"}], "]"}], "/.", 
      RowBox[{"ChooseParameters", "[", 
       RowBox[{"{", 
        RowBox[{"a", ",", "c", ",", 
         RowBox[{"-", "1."}], ",", "1."}], "}"}], "]"}]}], ",", "coordSymb", 
     ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.796265086123047*^9, 3.79626512646875*^9}, {
   3.796265954723633*^9, 3.7962659830273438`*^9}, {3.7962660841533203`*^9, 
   3.796266085557617*^9}, {3.7962675959208984`*^9, 3.796267597743164*^9}, {
   3.796278272770508*^9, 3.796278288120117*^9}, {3.796278333838867*^9, 
   3.7962784087929688`*^9}, {3.7962784526757812`*^9, 3.7962784607939453`*^9}, 
   3.7962784986279297`*^9, 3.7962808832402344`*^9, 3.7963933366220703`*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"cb68c790-11f6-48a3-a412-8850e0573a1c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pfun", "[", 
           RowBox[{"a", ",", "c"}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"pfun", "[", 
           RowBox[{"a", ",", "c"}], "]"}], "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}], "[", "t", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "20"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ToString", "[", 
         RowBox[{
          RowBox[{"sol", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          "TraditionalForm"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<State space trajectory\>\""}]}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "1.5", ",", "0.1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"c", ",", 
     RowBox[{"-", "2.0"}], ",", "2.0", ",", "0.1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796264707120117*^9, 3.7962647839853516`*^9}, {
  3.7962653997783203`*^9, 3.796265416508789*^9}, {3.7962654515908203`*^9, 
  3.7962655147998047`*^9}, {3.7962655995078125`*^9, 3.796265631296875*^9}, {
  3.7962661060546875`*^9, 3.7962662314248047`*^9}, {3.796266281966797*^9, 
  3.796266283024414*^9}, {3.7962676092802734`*^9, 3.796267618013672*^9}, {
  3.796278535216797*^9, 3.796278549154297*^9}, {3.7963968555595703`*^9, 
  3.7963969553603516`*^9}, {3.796397014180664*^9, 3.7963970182822266`*^9}, {
  3.7963970546572266`*^9, 3.796397084958008*^9}, {3.796397129748047*^9, 
  3.7963971975273438`*^9}, {3.796397228069336*^9, 3.7963972298515625`*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"e9032fdc-3a56-4bc0-bb1a-e5103a66aa4b"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    0.6000000000000001, $CellContext`c$$ = -1.2, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.2, 1.5, 0.1}, {
      Hold[$CellContext`c$$], -2., 2., 0.1}}, Typeset`size$$ = {
    500., {249., 256.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$114135$$ = 
    0, $CellContext`c$114136$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.2, $CellContext`c$$ = -2.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$114135$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$114136$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot[
        Evaluate[{
          Part[
           $CellContext`pfun[$CellContext`a$$, $CellContext`c$$], 
           1][$CellContext`t], 
          Part[
           $CellContext`pfun[$CellContext`a$$, $CellContext`c$$], 
           2][$CellContext`t]}], {$CellContext`t, 0, 25}, 
        PlotRange -> {{0, 20}, {0, 20}}, ImageSize -> 500, AxesLabel -> Table[
          ToString[
           Part[$CellContext`sol, 1, $CellContext`i, 1], 
           TraditionalForm], {$CellContext`i, 1, $CellContext`n}], PlotLabel -> 
        "State space trajectory"], 
      "Specifications" :> {{$CellContext`a$$, 0.2, 1.5, 
         0.1}, {$CellContext`c$$, -2., 2., 0.1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{547., {314., 321.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7962647871435547`*^9, 3.7962654541865234`*^9, {3.7962654850751953`*^9, 
   3.796265522591797*^9}, {3.7962656008603516`*^9, 3.7962656319375*^9}, 
   3.7962661136220703`*^9, {3.7962661576240234`*^9, 3.7962661604179688`*^9}, {
   3.796266198291992*^9, 3.796266200541992*^9}, 3.7962662323291016`*^9, 
   3.796266283873047*^9, 3.7962676203710938`*^9, 3.796268398591797*^9, 
   3.7962742035625*^9, {3.7962785507910156`*^9, 3.7962785567177734`*^9}, 
   3.7962808851367188`*^9, 3.796373710569336*^9, 3.7963934620166016`*^9, {
   3.7963968815966797`*^9, 3.796396956873047*^9}, {3.7963971698847656`*^9, 
   3.7963971987822266`*^9}, 3.7963972331152344`*^9, 3.796397452334961*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"661aa819-8188-472c-afe3-bac79729dc4c"]
}, Open  ]],

Cell[TextData[{
 "Seems like the trajectory is always closed. This is the ",
 StyleBox["limit cycle",
  FontSlant->"Italic"],
 " of the Lotka-Volterra system."
}], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963977642490234`*^9}, 
   3.796398616716797*^9, {3.7963991388339844`*^9, 3.796399153696289*^9}, {
   3.7963992596171875`*^9, 3.796399353338867*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"a03e16a7-767b-4a9a-9bfb-ccd3e5f6d80d"]
}, Closed]],

Cell[CellGroupData[{

Cell["3D plot of both coordinates against time", "Subsection",
 CellChangeTimes->{{3.7962691609726562`*^9, 3.79626919309375*^9}, {
   3.796274991984375*^9, 3.796275012129883*^9}, {3.796373733946289*^9, 
   3.796373749614258*^9}, 3.796393447520508*^9, {3.7963935744570312`*^9, 
   3.7963935766083984`*^9}},ExpressionUUID->"cb5abf71-ec6f-4d02-99ca-\
838a2e9fb087"],

Cell[TextData[{
 "We can also plot the state space at each moment in time (used as the third \
dimension), like a sequence of snapshots.  ",
 StyleBox["ADD LABELS",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963977642490234`*^9}, 
   3.796398616716797*^9, {3.7963991388339844`*^9, 3.796399153696289*^9}, {
   3.7963992596171875`*^9, 3.796399353338867*^9}, {3.7963995761484375`*^9, 
   3.796399631984375*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"93813dfd-20d7-4853-b848-49aff0e01767"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot3D", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"pfun", "[", 
           RowBox[{"a", ",", "c"}], "]"}], "\[LeftDoubleBracket]", "1", 
          "\[RightDoubleBracket]"}], "[", "t", "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"pfun", "[", 
           RowBox[{"a", ",", "c"}], "]"}], "\[LeftDoubleBracket]", "2", 
          "\[RightDoubleBracket]"}], "[", "t", "]"}], ",", "t"}], "}"}]}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "25"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"a", "+", "15"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", 
          RowBox[{"c", "+", "30"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "25"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Boxed", "\[Rule]", "False"}]}], "\[IndentingNewLine]", "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.2", ",", "20", ",", "0.2"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c", ",", 
     RowBox[{"-", "2.0"}], ",", "0.", ",", "0.2"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7963737524248047`*^9, 3.7963737621708984`*^9}, {
  3.796373792442383*^9, 3.796373812057617*^9}, {3.7963738507783203`*^9, 
  3.7963738774208984`*^9}, {3.796373924955078*^9, 3.796373934713867*^9}, {
  3.796374023953125*^9, 3.7963740610283203`*^9}, {3.7963741240273438`*^9, 
  3.796374171640625*^9}, {3.796374255473633*^9, 3.796374259239258*^9}, {
  3.7963742933466797`*^9, 3.7963743016796875`*^9}, {3.796395961154297*^9, 
  3.7963959895351562`*^9}, {3.7963960307265625`*^9, 3.7963960637226562`*^9}, {
  3.796396112736328*^9, 3.7963961525234375`*^9}, {3.796396183723633*^9, 
  3.7963961846103516`*^9}, {3.796397585861328*^9, 3.796397678756836*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"07cb3853-739a-44eb-8f2b-9b7f93860c36"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 
    10., $CellContext`c$$ = -0.3999999999999999, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.2, 20, 0.2}, {
      Hold[$CellContext`c$$], -2., 0., 0.2}}, Typeset`size$$ = {
    600., {316., 321.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$118232$$ = 
    0, $CellContext`c$118233$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.2, $CellContext`c$$ = -2.}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$118232$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$118233$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ParametricPlot3D[
        Evaluate[{
          Part[
           $CellContext`pfun[$CellContext`a$$, $CellContext`c$$], 
           1][$CellContext`t], 
          Part[
           $CellContext`pfun[$CellContext`a$$, $CellContext`c$$], 
           2][$CellContext`t], $CellContext`t}], {$CellContext`t, 0, 25}, 
        PlotRange -> {{-1, $CellContext`a$$ + 15}, {-1, $CellContext`c$$ + 
           30}, {0, 25}}, ImageSize -> 600, Boxed -> False], 
      "Specifications" :> {{$CellContext`a$$, 0.2, 20, 
         0.2}, {$CellContext`c$$, -2., 0., 0.2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{647., {380., 387.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.796373888385742*^9, 3.796373897859375*^9}, {
   3.796373935166992*^9, 3.796373950491211*^9}, {3.7963740670615234`*^9, 
   3.7963740748427734`*^9}, {3.796374165180664*^9, 3.7963741837441406`*^9}, {
   3.796374302551758*^9, 3.796374307826172*^9}, 3.796393463067383*^9, {
   3.796395966098633*^9, 3.7963959900078125`*^9}, 3.796396064348633*^9, {
   3.796396117682617*^9, 3.796396153533203*^9}, 3.796396188067383*^9, 
   3.7963974531054688`*^9, {3.7963975737070312`*^9, 3.796397679897461*^9}},
 CellLabel->
  "Out[165]=",ExpressionUUID->"54f71b54-2bcf-4cea-bfe1-7895e69485dd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plot the vector field and vary the parameters", "Subsection",
 CellChangeTimes->{{3.7962691609726562`*^9, 3.79626919309375*^9}, {
  3.796274991984375*^9, 
  3.796275012129883*^9}},ExpressionUUID->"e0903939-23d4-4fff-b60d-\
3865069b6557"],

Cell[TextData[{
 "We can get insight into the system\[CloseCurlyQuote]s behavior without \
solving the differential equations. Simply examine the flow of the vector \
field in the state space. We do this interactively, leaving all four \
parameters arbitrary.  ",
 StyleBox["STABLE POINT - ADD LATER",
  FontWeight->"Bold"]
}], "Item",
 CellChangeTimes->{{3.7963977235634766`*^9, 3.7963977642490234`*^9}, 
   3.796398616716797*^9, {3.7963991388339844`*^9, 3.796399153696289*^9}, {
   3.7963992596171875`*^9, 3.796399353338867*^9}, {3.7963994595722656`*^9, 
   3.7963995513339844`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"ead2e898-8f03-4373-84f4-dbc7c7a2ad77"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"StreamDensityPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"fVector", "/.", 
       RowBox[{"Thread", "[", 
        RowBox[{"coord", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "/.", 
      RowBox[{"ChooseParameters", "[", 
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"-", "c"}], ",", 
         RowBox[{"-", "b"}], ",", "d"}], "}"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "20"}], "}"}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<BeachColors\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<2D Lotka-Volterra vector field with parameters: \\n\>\"", "<>", 
       RowBox[{"DisplayParameters", "[", 
        RowBox[{"allParameters", ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", 
           RowBox[{"-", "c"}], ",", 
           RowBox[{"-", "b"}], ",", "d"}], "}"}]}], "]"}]}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.1", ",", "2.", ",", "0.1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"c", ",", "0.01", ",", "2.", ",", "0.1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0.01", ",", "2.", ",", "0.1"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0.01", ",", "2.", ",", "0.1"}], "}"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7962787786376953`*^9, 3.7962787786376953`*^9}, {
   3.79627880903125*^9, 3.7962790679091797`*^9}, {3.7962791398427734`*^9, 
   3.7962791442001953`*^9}, {3.796279201388672*^9, 3.7962792036757812`*^9}, {
   3.7962793024658203`*^9, 3.796279303625*^9}, {3.7962793389697266`*^9, 
   3.7962793412333984`*^9}, {3.7962793716064453`*^9, 
   3.7962793856865234`*^9}, {3.7962795043095703`*^9, 3.796279506477539*^9}, {
   3.7962796159882812`*^9, 3.796279663484375*^9}, {3.7962797622460938`*^9, 
   3.7962798466748047`*^9}, 3.796393447508789*^9, {3.7963935922753906`*^9, 
   3.796393633366211*^9}, 3.796393733578125*^9, {3.7963937883876953`*^9, 
   3.7963937888916016`*^9}, {3.796393833944336*^9, 3.796393838848633*^9}, 
   3.7963964224365234`*^9, 3.796396472314453*^9, {3.796396755958008*^9, 
   3.79639676084375*^9}, {3.7963974705976562`*^9, 3.796397476107422*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"a706abae-5f81-4f2d-9694-b2b7c81bdfc8"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 0.1, $CellContext`b$$ = 
    0.01, $CellContext`c$$ = 0.01, $CellContext`d$$ = 0.01, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0.1, 2., 0.1}, {
      Hold[$CellContext`c$$], 0.01, 2., 0.1}, {
      Hold[$CellContext`b$$], 0.01, 2., 0.1}, {
      Hold[$CellContext`d$$], 0.01, 2., 0.1}}, Typeset`size$$ = {
    600., {315., 321.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`a$115097$$ = 
    0, $CellContext`c$115098$$ = 0, $CellContext`b$115099$$ = 
    0, $CellContext`d$115100$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a$$ = 0.1, $CellContext`b$$ = 
        0.01, $CellContext`c$$ = 0.01, $CellContext`d$$ = 0.01}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$115097$$, 0], 
        Hold[$CellContext`c$$, $CellContext`c$115098$$, 0], 
        Hold[$CellContext`b$$, $CellContext`b$115099$$, 0], 
        Hold[$CellContext`d$$, $CellContext`d$115100$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> StreamDensityPlot[
        ReplaceAll[
         ReplaceAll[$CellContext`fVector, 
          Thread[$CellContext`coord -> {$CellContext`x, $CellContext`y}]], 
         $CellContext`ChooseParameters[{$CellContext`a$$, -$CellContext`c$$, \
-$CellContext`b$$, $CellContext`d$$}]], {$CellContext`x, 0, 
         20}, {$CellContext`y, 0, 20}, ColorFunction -> "BeachColors", 
        ImageSize -> 600, PlotLabel -> 
        StringJoin["2D Lotka-Volterra vector field with parameters: \n", 
          $CellContext`DisplayParameters[$CellContext`allParameters, \
{$CellContext`a$$, -$CellContext`c$$, -$CellContext`b$$, $CellContext`d$$}]]],
       "Specifications" :> {{$CellContext`a$$, 0.1, 2., 
         0.1}, {$CellContext`c$$, 0.01, 2., 0.1}, {$CellContext`b$$, 0.01, 2.,
          0.1}, {$CellContext`d$$, 0.01, 2., 0.1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{647., {413., 420.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7962787824521484`*^9, {3.796278979484375*^9, 3.7962790010439453`*^9}, {
   3.7962790508251953`*^9, 3.7962790770273438`*^9}, {3.7962791470751953`*^9, 
   3.7962791559052734`*^9}, 3.796279205741211*^9, {3.796279271185547*^9, 
   3.7962792719492188`*^9}, {3.7962793045908203`*^9, 
   3.7962793165126953`*^9}, {3.7962793866875*^9, 3.796279407955078*^9}, 
   3.796279507133789*^9, {3.7962796169570312`*^9, 3.79627966409375*^9}, {
   3.796279820080078*^9, 3.7962798524365234`*^9}, 3.7962809040751953`*^9, 
   3.796373710857422*^9, 3.7963934624677734`*^9, {3.796393614595703*^9, 
   3.796393638020508*^9}, 3.796393840330078*^9, 3.7963964236279297`*^9, 
   3.796396474151367*^9, 3.7963967833984375`*^9, {3.796397452489258*^9, 
   3.7963974784316406`*^9}},
 CellLabel->
  "Out[160]=",ExpressionUUID->"ecd44f38-a0d0-4383-852d-e5b5fba931ed"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1361, 925},
WindowMargins->{{30, Automatic}, {Automatic, 8}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 172, 3, 96, "Title",ExpressionUUID->"f930adf6-29b9-439e-8b92-399c2536b381"],
Cell[CellGroupData[{
Cell[777, 29, 169, 3, 67, "Section",ExpressionUUID->"980ce50a-b217-4994-b28e-b39a635631d6"],
Cell[949, 34, 529, 9, 47, "Item",ExpressionUUID->"1817ad05-a803-4a37-bf19-b9e483be6442"],
Cell[1481, 45, 411, 9, 28, "Input",ExpressionUUID->"9c1d9702-6aa2-4b44-bfd2-174bbc270101"],
Cell[1895, 56, 2763, 77, 124, "Input",ExpressionUUID->"65e79aea-5f61-4276-a561-ffa6f4e23486"],
Cell[CellGroupData[{
Cell[4683, 137, 1434, 27, 86, "Input",ExpressionUUID->"7b074f97-a834-47c8-8608-caa36654f0be"],
Cell[CellGroupData[{
Cell[6142, 168, 1122, 27, 22, "Print",ExpressionUUID->"8b77b5ab-f13f-406e-babf-914db79e55ac"],
Cell[7267, 197, 695, 17, 22, "Print",ExpressionUUID->"fac22275-ddc3-49af-a483-30f86da0e7b2"],
Cell[7965, 216, 873, 22, 22, "Print",ExpressionUUID->"beee4daa-467d-4874-8123-397b390b64f9"],
Cell[8841, 240, 851, 21, 22, "Print",ExpressionUUID->"5b56bef9-9115-43ce-984b-d54ff3c03a87"]
}, Open  ]]
}, Open  ]],
Cell[9719, 265, 461, 8, 47, "Item",ExpressionUUID->"6857f29d-6513-4185-ad7f-37f646dde009"],
Cell[CellGroupData[{
Cell[10205, 277, 2761, 57, 143, "Input",ExpressionUUID->"a0a3e19d-318d-4d8e-abcd-e4de22819822"],
Cell[12969, 336, 1341, 40, 32, "Output",ExpressionUUID->"a217fe26-8fdb-4316-a9c3-90cb38147c20"],
Cell[CellGroupData[{
Cell[14335, 380, 2506, 65, 35, "Print",ExpressionUUID->"abb00c2b-5a05-4f42-b76a-6897f4e247ff"],
Cell[16844, 447, 3051, 77, 35, "Print",ExpressionUUID->"81c2a9c0-d4dd-474e-832d-63e028eda030"]
}, Open  ]]
}, Open  ]],
Cell[19922, 528, 493, 8, 47, "Item",ExpressionUUID->"c579ede9-85ae-4c15-b4a4-0f950aeceb17"]
}, Closed]],
Cell[CellGroupData[{
Cell[20452, 541, 291, 4, 53, "Section",ExpressionUUID->"e4ec4a0c-3e51-4b1b-8e33-e36d6ec1d66b"],
Cell[20746, 547, 430, 9, 47, "Item",ExpressionUUID->"eeb506a5-c93a-4287-850a-dac0617d0360"],
Cell[21179, 558, 867, 17, 28, "Input",ExpressionUUID->"c11939d8-d202-469e-b464-029a31b6259d"],
Cell[22049, 577, 485, 8, 47, "Item",ExpressionUUID->"244099d1-c505-4eff-b086-6492e67a5d29"],
Cell[22537, 587, 1537, 30, 105, "Input",ExpressionUUID->"a4812ccf-e1d6-49f0-837a-4a65adaa736f"],
Cell[24077, 619, 522, 10, 47, "Item",ExpressionUUID->"4d304d5f-749a-4841-845a-ca691a1df695"],
Cell[24602, 631, 1086, 27, 48, "Input",ExpressionUUID->"f3869116-f23a-4e82-b6d9-d8b133b50dbb"],
Cell[25691, 660, 2895, 59, 105, "Input",ExpressionUUID->"d0976306-f6b0-463c-a4de-93dd81563ce1"]
}, Closed]],
Cell[CellGroupData[{
Cell[28623, 724, 361, 5, 53, "Section",ExpressionUUID->"11379dc6-e985-4295-8b6a-015eab9cc145"],
Cell[CellGroupData[{
Cell[29009, 733, 345, 7, 53, "Subsection",ExpressionUUID->"299d6651-2aa7-450b-a6d2-d9478c3d60fb"],
Cell[29357, 742, 555, 10, 67, "Item",ExpressionUUID->"1d9241df-44ef-425c-8054-a94910e09c89"],
Cell[CellGroupData[{
Cell[29937, 756, 2260, 45, 86, "Input",ExpressionUUID->"442120c2-8a38-40e4-baa9-473eb9526887"],
Cell[32200, 803, 908, 20, 32, "Output",ExpressionUUID->"791b98c6-e237-4a6b-9985-e92f39362973"],
Cell[33111, 825, 1051, 23, 32, "Output",ExpressionUUID->"43c9134b-1c69-41ff-875f-21d48e2c2b74"]
}, Open  ]],
Cell[34177, 851, 386, 8, 47, "Item",ExpressionUUID->"f98ba2b8-1078-4145-83a2-162d89ca1697"],
Cell[34566, 861, 652, 13, 28, "Input",ExpressionUUID->"9375ef63-98a0-42e8-9826-a713a58abccf"],
Cell[35221, 876, 321, 5, 47, "Item",ExpressionUUID->"11307dae-7def-435b-a7f7-3a0d5c4b7da8"],
Cell[CellGroupData[{
Cell[35567, 885, 1620, 33, 67, "Input",ExpressionUUID->"3564c56c-92a5-4753-b18b-0e0b21036afc"],
Cell[37190, 920, 91284, 1554, 277, "Output",ExpressionUUID->"ad4cbb87-c94f-4763-bc80-09f91ce4d703"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[128523, 2480, 375, 7, 37, "Subsection",ExpressionUUID->"83791389-cc62-4076-a89e-24c38b414aea"],
Cell[128901, 2489, 530, 9, 67, "Item",ExpressionUUID->"fbeffc14-ebbe-4c21-8603-c40558758e3d"],
Cell[129434, 2500, 1111, 24, 48, "Input",ExpressionUUID->"cb68c790-11f6-48a3-a412-8850e0573a1c"],
Cell[CellGroupData[{
Cell[130570, 2528, 2424, 55, 86, "Input",ExpressionUUID->"e9032fdc-3a56-4bc0-bb1a-e5103a66aa4b"],
Cell[132997, 2585, 3110, 61, 654, "Output",ExpressionUUID->"661aa819-8188-472c-afe3-bac79729dc4c"]
}, Open  ]],
Cell[136122, 2649, 461, 10, 47, "Item",ExpressionUUID->"a03e16a7-767b-4a9a-9bfb-ccd3e5f6d80d"]
}, Closed]],
Cell[CellGroupData[{
Cell[136620, 2664, 362, 5, 37, "Subsection",ExpressionUUID->"cb5abf71-ec6f-4d02-99ca-838a2e9fb087"],
Cell[136985, 2671, 540, 11, 47, "Item",ExpressionUUID->"93813dfd-20d7-4853-b848-49aff0e01767"],
Cell[CellGroupData[{
Cell[137550, 2686, 2391, 55, 219, "Input",ExpressionUUID->"07cb3853-739a-44eb-8f2b-9b7f93860c36"],
Cell[139944, 2743, 2809, 55, 786, "Output",ExpressionUUID->"54f71b54-2bcf-4cea-bfe1-7895e69485dd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[142802, 2804, 243, 4, 37, "Subsection",ExpressionUUID->"e0903939-23d4-4fff-b60d-3865069b6557"],
Cell[143048, 2810, 679, 13, 67, "Item",ExpressionUUID->"ead2e898-8f03-4373-84f4-dbc7c7a2ad77"],
Cell[CellGroupData[{
Cell[143752, 2827, 2598, 56, 162, "Input",ExpressionUUID->"a706abae-5f81-4f2d-9694-b2b7c81bdfc8"],
Cell[146353, 2885, 3714, 68, 852, "Output",ExpressionUUID->"ecd44f38-a0d0-4383-852d-e5b5fba931ed"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

